/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.itla.apppatologia.vista.viewers;

import java.awt.Color;
import java.awt.Component;
import java.util.Collection;
import java.util.Collections;
import java.util.List;
import javax.persistence.EntityManager;
import javax.persistence.TypedQuery;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;
import org.itla.apppatologia.DTO.EstudioDTO;
import org.itla.apppatologia.Repository.Estudio;
import org.itla.apppatologia.Repository.Paciente;
import org.itla.apppatologia.modelo.Contexto;
import org.itla.apppatologia.modelo.PersistenceUnits;
import org.itla.apppatologia.vista.mantenimientos.IMantenimiento;
import org.itla.apppatologia.vista.mantenimientos.PanelPaciente;
import org.itla.apppatologia.Repository.Caso;
import org.itla.apppatologia.Repository.Observacion;
import org.itla.apppatologia.Repository.Resultado;
import org.itla.apppatologia.vista.componentes.PanelObservacionesView;
import org.itla.apppatologia.vista.mantenimientos.PanelResultado;
/**
 *
 * @author Giame
 */
public class ViewerEstudio extends javax.swing.JPanel implements IViewerObservable{

    EntityManager entityManager;
    Contexto context;
    private List<Estudio> estudios;
    private EstudioDTO estudio;
    private Estudio estudioSelected;
    DefaultTableModel dtm;
    //private JList<Aseguradora> lista = new JList<Aseguradora>();
    /**
     * Creates new form ViewerARS
     */
    IMantenimiento mantenimientoAsociado;
    public ViewerEstudio() {
        initComponents();
        
        
        
        context = new  Contexto();
        entityManager = context.getEntityManager(PersistenceUnits.getLocalContext());
        
        estudios = entityManager.createNamedQuery("Estudio.findAll").getResultList();
        dtm =getModel(estudios);
        
        tablaEstudio.setModel(dtm);
        
        RedisenarTabla();
        
        String txtCantidadPacientes = "<html>El"+"% de los pacientes están afiliados a esta aseguradora. Con un total de"+" pacienetes.</html>";
        String txtFechaPrimerPacientes = "<html>El primer paciente con esta aseguradora fue registrado el día</html>";
        String txtFechaUltimoPacientes = "<html>El ultimo paciente con esta aseguradora fue registrado el día</html>";
//        jLabel9.setText(txtFechaPrimerPacientes);
//        jLabel10.setText(txtFechaUltimoPacientes);
//        jLabel6.setText(txtCantidadPacientes);
    }
    public ViewerEstudio(EntityManager em) {
        initComponents();
        
        
        entityManager=em;
//        context = new  Contexto();
//        entityManager = context.getEntityManager(PersistenceUnits.getLocalContext());
        
        estudios = entityManager.createNamedQuery("Estudio.findAll").getResultList();
        
        
        tablaEstudio.setModel(getModel(estudios));
        
        RedisenarTabla();
        
        String txtCantidadPacientes = "<html>El"+"% de los pacientes están afiliados a esta aseguradora. Con un total de"+" pacienetes.</html>";
        String txtFechaPrimerPacientes = "<html>El primer paciente con esta aseguradora fue registrado el día</html>";
        String txtFechaUltimoPacientes = "<html>El ultimo paciente con esta aseguradora fue registrado el día</html>";
//        jLabel9.setText(txtFechaPrimerPacientes);
//        jLabel10.setText(txtFechaUltimoPacientes);
//        jLabel6.setText(txtCantidadPacientes);
        
        tablaEstudio.getSelectionModel().addSelectionInterval(0,0);
        Buscar();
        tablaEstudio.requestFocus();
        EnableButtoms(false, null);
    }

    @Override
    public String getName(){
        return "estudio";
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenu1 = new javax.swing.JPopupMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jSeparator4 = new javax.swing.JPopupMenu.Separator();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jSeparator5 = new javax.swing.JPopupMenu.Separator();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenuItem5 = new javax.swing.JMenuItem();
        pnListaPadre = new javax.swing.JPanel();
        pnBusqueda = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        btnNuevo = new javax.swing.JButton();
        btnEditar = new javax.swing.JToggleButton();
        btnBorrar = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        txtBuscar = new javax.swing.JTextField();
        btnBuscar = new javax.swing.JButton();
        btnActualizar = new javax.swing.JButton();
        pnLista = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tablaEstudio = new javax.swing.JTable();
        pnViewPadre = new javax.swing.JPanel();
        pnView = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jPanel2 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        lblCodigoEstudio = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jPanel9 = new javax.swing.JPanel();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel19 = new javax.swing.JLabel();
        lblNoReclamacion = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        lblTipo = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel6 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        btnPaciente = new javax.swing.JButton();
        jLabel17 = new javax.swing.JLabel();
        btnMedico = new javax.swing.JButton();
        jLabel18 = new javax.swing.JLabel();
        btnPatologo = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        panelContenedorObesrvaciones = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jSeparator3 = new javax.swing.JSeparator();
        jPanel8 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        pnBotones = new javax.swing.JPanel();
        PanelMenu = new javax.swing.JPanel();
        pnMenuSuperior = new javax.swing.JPanel();
        btnAceptar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        jPanel10 = new javax.swing.JPanel();
        btnGenerarResultado = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();
        jButton12 = new javax.swing.JButton();

        jPopupMenu1.setBackground(new java.awt.Color(225, 212, 212));
        jPopupMenu1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jMenuItem1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/itla/apppatologia/vista/PNG/botones/analitica_2.png"))); // NOI18N
        jMenuItem1.setText("Generar resultado");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jPopupMenu1.add(jMenuItem1);
        jPopupMenu1.add(jSeparator4);

        jMenuItem3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/itla/apppatologia/vista/PNG/persistencia/lapiz.png"))); // NOI18N
        jMenuItem3.setText("Editar");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jPopupMenu1.add(jMenuItem3);

        jMenuItem2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/itla/apppatologia/vista/PNG/persistencia/goma-de-borrar.png"))); // NOI18N
        jMenuItem2.setText("Borrar");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jPopupMenu1.add(jMenuItem2);
        jPopupMenu1.add(jSeparator5);

        jMenu1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/itla/apppatologia/vista/PNG/persistencia/copia.png"))); // NOI18N
        jMenu1.setText("Copiar");

        jMenuItem4.setText("Nombre");
        jMenu1.add(jMenuItem4);

        jMenuItem5.setText("Paciente");
        jMenu1.add(jMenuItem5);

        jPopupMenu1.add(jMenu1);

        setBackground(new java.awt.Color(255, 102, 255));
        setLayout(new java.awt.BorderLayout());

        pnListaPadre.setPreferredSize(new java.awt.Dimension(294, 370));
        pnListaPadre.setLayout(new javax.swing.BoxLayout(pnListaPadre, javax.swing.BoxLayout.Y_AXIS));

        pnBusqueda.setPreferredSize(new java.awt.Dimension(165, 80));
        pnBusqueda.setRequestFocusEnabled(false);
        pnBusqueda.setLayout(new java.awt.GridLayout(2, 0));

        jPanel5.setLayout(new javax.swing.BoxLayout(jPanel5, javax.swing.BoxLayout.LINE_AXIS));

        btnNuevo.setBackground(new java.awt.Color(255, 230, 255));
        btnNuevo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/itla/apppatologia/vista/PNG/botones/anadir (1).png"))); // NOI18N
        btnNuevo.setText("Nuevo");
        btnNuevo.setToolTipText("Crear nuevo estudio.");
        btnNuevo.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnNuevo.setPreferredSize(new java.awt.Dimension(91, 44));
        btnNuevo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnNuevoMouseClicked(evt);
            }
        });
        btnNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoActionPerformed(evt);
            }
        });
        jPanel5.add(btnNuevo);

        btnEditar.setBackground(new java.awt.Color(255, 230, 255));
        btnEditar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/itla/apppatologia/vista/PNG/persistencia/lapiz.png"))); // NOI18N
        btnEditar.setText("Editar");
        btnEditar.setToolTipText("Editar estudio seleccionado.");
        btnEditar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnEditar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnEditarMouseClicked(evt);
            }
        });
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });
        jPanel5.add(btnEditar);

        btnBorrar.setBackground(new java.awt.Color(255, 230, 255));
        btnBorrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/itla/apppatologia/vista/PNG/persistencia/goma-de-borrar.png"))); // NOI18N
        btnBorrar.setText("Borrar");
        btnBorrar.setToolTipText("Borrar estudio seleccionado.");
        btnBorrar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnBorrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBorrarActionPerformed(evt);
            }
        });
        jPanel5.add(btnBorrar);

        pnBusqueda.add(jPanel5);

        jPanel4.setLayout(new javax.swing.BoxLayout(jPanel4, javax.swing.BoxLayout.LINE_AXIS));

        txtBuscar.setPreferredSize(new java.awt.Dimension(50, 28));
        txtBuscar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtBuscarKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtBuscarKeyReleased(evt);
            }
        });
        jPanel4.add(txtBuscar);

        btnBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/itla/apppatologia/vista/PNG/persistencia/busqueda.png"))); // NOI18N
        btnBuscar.setToolTipText("Buscar estudio en la lista.");
        btnBuscar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });
        jPanel4.add(btnBuscar);

        btnActualizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/itla/apppatologia/vista/PNG/persistencia/flechas-actualizar.png"))); // NOI18N
        btnActualizar.setToolTipText("Actualizar lista de estudios.");
        btnActualizar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarActionPerformed(evt);
            }
        });
        jPanel4.add(btnActualizar);

        pnBusqueda.add(jPanel4);

        pnListaPadre.add(pnBusqueda);

        pnLista.setLayout(new java.awt.BorderLayout());

        tablaEstudio.setFont(new java.awt.Font("sansserif", 1, 16)); // NOI18N
        tablaEstudio.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tablaEstudio.setRowHeight(30);
        tablaEstudio.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tablaEstudioMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tablaEstudioMouseReleased(evt);
            }
        });
        tablaEstudio.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tablaEstudioKeyReleased(evt);
            }
        });
        jScrollPane2.setViewportView(tablaEstudio);

        pnLista.add(jScrollPane2, java.awt.BorderLayout.CENTER);

        pnListaPadre.add(pnLista);

        add(pnListaPadre, java.awt.BorderLayout.LINE_START);

        pnViewPadre.setBackground(new java.awt.Color(255, 255, 255));
        pnViewPadre.setBorder(null);
        pnViewPadre.setLayout(new java.awt.BorderLayout());

        pnView.setBackground(new java.awt.Color(255, 255, 255));
        pnView.setBorder(null);
        pnView.setForeground(new java.awt.Color(255, 255, 255));
        pnView.setLayout(new java.awt.BorderLayout());

        jScrollPane3.setBackground(new java.awt.Color(255, 255, 255));
        jScrollPane3.setBorder(null);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setPreferredSize(new java.awt.Dimension(300, 600));
        jPanel2.setLayout(new java.awt.BorderLayout());

        jPanel7.setBackground(new java.awt.Color(255, 241, 250));
        jPanel7.setPreferredSize(new java.awt.Dimension(430, 880));

        jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/itla/apppatologia/vista/PNG/principales/biologia.png"))); // NOI18N

        lblCodigoEstudio.setFont(new java.awt.Font("sansserif", 2, 26)); // NOI18N
        lblCodigoEstudio.setText("nombre ARS");

        jLabel13.setFont(new java.awt.Font("sansserif", 1, 24)); // NOI18N
        jLabel13.setText("Estudio");

        jPanel9.setBackground(new java.awt.Color(255, 251, 251));

        jLabel19.setFont(new java.awt.Font("sansserif", 1, 16)); // NOI18N
        jLabel19.setText("No. reclamación:");

        lblNoReclamacion.setFont(new java.awt.Font("sansserif", 0, 16)); // NOI18N
        lblNoReclamacion.setText("Paciente:");

        jLabel21.setFont(new java.awt.Font("sansserif", 1, 16)); // NOI18N
        jLabel21.setText("Tipo:");

        lblTipo.setFont(new java.awt.Font("sansserif", 0, 16)); // NOI18N
        lblTipo.setText("Paciente:");

        jScrollPane1.setBackground(new java.awt.Color(255, 255, 255));
        jScrollPane1.setBorder(null);
        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane1.setViewportBorder(null);

        jPanel6.setBackground(new java.awt.Color(255, 251, 251));
        jPanel6.setLayout(new java.awt.BorderLayout());

        jPanel3.setBackground(new java.awt.Color(255, 251, 251));

        jLabel16.setFont(new java.awt.Font("sansserif", 1, 16)); // NOI18N
        jLabel16.setText("Paciente:");

        btnPaciente.setBackground(new java.awt.Color(255, 230, 255));
        btnPaciente.setFont(new java.awt.Font("sansserif", 0, 16)); // NOI18N
        btnPaciente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/itla/apppatologia/vista/PNG/botones/bata-de-paciente (1).png"))); // NOI18N
        btnPaciente.setText("Ver");
        btnPaciente.setToolTipText("Ver paciente.");
        btnPaciente.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnPaciente.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnPaciente.setPreferredSize(new java.awt.Dimension(91, 44));
        btnPaciente.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnPacienteMouseClicked(evt);
            }
        });
        btnPaciente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPacienteActionPerformed(evt);
            }
        });

        jLabel17.setFont(new java.awt.Font("sansserif", 1, 16)); // NOI18N
        jLabel17.setText("Médico:");

        btnMedico.setBackground(new java.awt.Color(255, 230, 255));
        btnMedico.setFont(new java.awt.Font("sansserif", 0, 16)); // NOI18N
        btnMedico.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/itla/apppatologia/vista/PNG/botones/doctor.png"))); // NOI18N
        btnMedico.setText("Ver");
        btnMedico.setToolTipText("Ver médico.");
        btnMedico.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnMedico.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnMedico.setPreferredSize(new java.awt.Dimension(91, 44));
        btnMedico.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnMedicoMouseClicked(evt);
            }
        });
        btnMedico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMedicoActionPerformed(evt);
            }
        });

        jLabel18.setFont(new java.awt.Font("sansserif", 1, 16)); // NOI18N
        jLabel18.setText("Patólogo:");

        btnPatologo.setBackground(new java.awt.Color(255, 230, 255));
        btnPatologo.setFont(new java.awt.Font("sansserif", 0, 16)); // NOI18N
        btnPatologo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/itla/apppatologia/vista/PNG/botones/cientifico.png"))); // NOI18N
        btnPatologo.setText("Ver");
        btnPatologo.setToolTipText("Ver patólogo encargado del caso.");
        btnPatologo.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnPatologo.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnPatologo.setPreferredSize(new java.awt.Dimension(91, 44));
        btnPatologo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnPatologoMouseClicked(evt);
            }
        });
        btnPatologo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPatologoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnPatologo, javax.swing.GroupLayout.DEFAULT_SIZE, 367, Short.MAX_VALUE)
                    .addComponent(btnMedico, javax.swing.GroupLayout.DEFAULT_SIZE, 367, Short.MAX_VALUE)
                    .addComponent(jLabel17)
                    .addComponent(jLabel18)
                    .addComponent(jLabel16)
                    .addComponent(btnPaciente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(57, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel16)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnPaciente, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel17)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnMedico, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel18)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnPatologo, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel6.add(jPanel3, java.awt.BorderLayout.PAGE_END);

        jScrollPane1.setViewportView(jPanel6);

        jScrollPane5.setBackground(new java.awt.Color(255, 245, 255));
        jScrollPane5.setBorder(null);
        jScrollPane5.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane5.setViewportBorder(null);

        panelContenedorObesrvaciones.setBackground(new java.awt.Color(255, 251, 251));
        panelContenedorObesrvaciones.setBorder(null);
        panelContenedorObesrvaciones.setLayout(new javax.swing.BoxLayout(panelContenedorObesrvaciones, javax.swing.BoxLayout.Y_AXIS));
        jScrollPane5.setViewportView(panelContenedorObesrvaciones);

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator2)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 390, Short.MAX_VALUE)
            .addComponent(jSeparator1)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel19)
                    .addComponent(jLabel21)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblNoReclamacion)
                            .addComponent(lblTipo))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jScrollPane5, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel19)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblNoReclamacion)
                .addGap(18, 18, 18)
                .addComponent(jLabel21)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblTipo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 110, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblCodigoEstudio, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel13)))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(20, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel11)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jLabel13)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblCodigoEstudio)))
                .addGap(12, 12, 12)
                .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel2.add(jPanel7, java.awt.BorderLayout.LINE_START);

        jPanel1.setLayout(new java.awt.BorderLayout());

        jSeparator3.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jPanel1.add(jSeparator3, java.awt.BorderLayout.LINE_START);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/itla/apppatologia/vista/PNG/graficos/grafico-circular (1).png"))); // NOI18N

        jLabel12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/itla/apppatologia/vista/PNG/graficos/grafico-circular (2).png"))); // NOI18N

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(196, 196, 196)
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(158, 158, 158))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel12)
                .addContainerGap())
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(242, 242, 242)
                .addComponent(jLabel1)
                .addGap(106, 106, 106)
                .addComponent(jLabel12)
                .addContainerGap(120, Short.MAX_VALUE))
        );

        jPanel1.add(jPanel8, java.awt.BorderLayout.CENTER);

        jPanel2.add(jPanel1, java.awt.BorderLayout.CENTER);

        jScrollPane3.setViewportView(jPanel2);

        pnView.add(jScrollPane3, java.awt.BorderLayout.CENTER);

        pnViewPadre.add(pnView, java.awt.BorderLayout.CENTER);

        pnBotones.setLayout(new java.awt.BorderLayout());

        PanelMenu.setBackground(new java.awt.Color(255, 252, 236));
        PanelMenu.setBorder(null);
        PanelMenu.setPreferredSize(new java.awt.Dimension(85, 356));
        PanelMenu.setLayout(new java.awt.GridLayout(0, 1));

        pnMenuSuperior.setBackground(new java.awt.Color(255, 255, 255));
        pnMenuSuperior.setPreferredSize(new java.awt.Dimension(70, 170));
        pnMenuSuperior.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                pnMenuSuperiorMouseDragged(evt);
            }
        });
        pnMenuSuperior.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                pnMenuSuperiorMousePressed(evt);
            }
        });
        pnMenuSuperior.setLayout(new java.awt.GridLayout(2, 0));

        btnAceptar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/itla/apppatologia/vista/PNG/persistencia/comprobado.png"))); // NOI18N
        btnAceptar.setToolTipText("Aceptar");
        btnAceptar.setContentAreaFilled(false);
        btnAceptar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnAceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAceptarActionPerformed(evt);
            }
        });
        pnMenuSuperior.add(btnAceptar);

        btnCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/itla/apppatologia/vista/PNG/persistencia/desenfrenado.png"))); // NOI18N
        btnCancelar.setToolTipText("Cancelar");
        btnCancelar.setContentAreaFilled(false);
        btnCancelar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });
        pnMenuSuperior.add(btnCancelar);

        PanelMenu.add(pnMenuSuperior);

        jPanel10.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 85, Short.MAX_VALUE)
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 121, Short.MAX_VALUE)
        );

        PanelMenu.add(jPanel10);

        btnGenerarResultado.setBackground(new java.awt.Color(255, 237, 255));
        btnGenerarResultado.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/itla/apppatologia/vista/PNG/botones/analitica.png"))); // NOI18N
        btnGenerarResultado.setText("<html><p ALIGN=center>Generar resultado</p></html>");
        btnGenerarResultado.setToolTipText("Generar resultado al estudio seleccionado.");
        btnGenerarResultado.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnGenerarResultado.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnGenerarResultado.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnGenerarResultado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGenerarResultadoActionPerformed(evt);
            }
        });
        PanelMenu.add(btnGenerarResultado);

        jButton8.setBackground(new java.awt.Color(255, 237, 255));
        jButton8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/itla/apppatologia/vista/PNG/botones/cancelar (3).png"))); // NOI18N
        jButton8.setText("<html><p ALIGN=center>sin implementar</p></html>");
        jButton8.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton8.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton8.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });
        PanelMenu.add(jButton8);

        jButton11.setBackground(new java.awt.Color(255, 237, 255));
        jButton11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/itla/apppatologia/vista/PNG/botones/cancelar (3).png"))); // NOI18N
        jButton11.setText("<html><p ALIGN=center>sin implementar</p></html>");
        jButton11.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton11.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton11.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });
        PanelMenu.add(jButton11);

        jButton12.setBackground(new java.awt.Color(255, 237, 255));
        jButton12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/itla/apppatologia/vista/PNG/botones/cancelar (3).png"))); // NOI18N
        jButton12.setText("<html><p ALIGN=center>sin implementar</p></html>");
        jButton12.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton12.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton12.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });
        PanelMenu.add(jButton12);

        pnBotones.add(PanelMenu, java.awt.BorderLayout.LINE_START);

        pnViewPadre.add(pnBotones, java.awt.BorderLayout.LINE_END);

        add(pnViewPadre, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void pnMenuSuperiorMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnMenuSuperiorMouseDragged
//        Point point = MouseInfo.getPointerInfo().getLocation();
//
//        this.setLocation(point.x-x,point.y-y);
    }//GEN-LAST:event_pnMenuSuperiorMouseDragged

    private void pnMenuSuperiorMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnMenuSuperiorMousePressed
//        x = evt.getX();
//        y = evt.getY();
    }//GEN-LAST:event_pnMenuSuperiorMousePressed

    private void tablaEstudioMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaEstudioMousePressed
        tablaEstudio.setSelectionBackground(Color.PINK);
        tablaEstudio.setSelectionForeground(Color.white);
        
        Buscar();
        PasarACampos();        
    }//GEN-LAST:event_tablaEstudioMousePressed

    private void btnAceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAceptarActionPerformed
        Estudio est = ((Estudio)mantenimientoAsociado.Save());
        try {
            entityManager.refresh(estudioSelected);
        } catch (java.lang.IllegalArgumentException e) {
        }
        
        
        estudios = entityManager.createNamedQuery("Estudio.findAll").getResultList();
        tablaEstudio.setModel(getModel(estudios));
        RedisenarTabla();
        setEstudioSelected(est);
        EnableButtoms(false,null);
    }//GEN-LAST:event_btnAceptarActionPerformed

    private void txtBuscarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscarKeyPressed
//        DefaultTableModel model = (DefaultTableModel) tablaPaciente.getModel();
//        DefaultTableModel newModel = new DefaultTableModel();
//        
//        Object[] registro = new Object[4];
//        
//        for (int i = 0; i < model.getRowCount(); i++) {
//            if (model.getValueAt(i, 1).toString().contains(jTextField1.getText().subSequence(0, 1))) {
//                registro[0] = model.getValueAt(i, 0);
//                registro[1] = model.getValueAt(i, 1);
//                registro[2] = model.getValueAt(i, 2);
//                registro[3] = model.getValueAt(i, 3);
//                
//                newModel.addRow(registro);
//            }
//            
//        }
//        tablaPaciente.setModel(newModel);
    }//GEN-LAST:event_txtBuscarKeyPressed

    private void btnGenerarResultadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGenerarResultadoActionPerformed
//        Entrega
        TypedQuery<Resultado> queryResultado;
        if(estudio!=null){
            Resultado result = new Resultado();
            Estudio estudioJPA = entityManager.find(Estudio.class, estudio.getIdestudio());
            queryResultado = entityManager.createNamedQuery("Resultado.findByIdestudio",Resultado.class).
                    setParameter("idestudio",estudioJPA);
            setEstudioSelected(estudioJPA);
            entityManager.refresh(estudioSelected);
            if (!estudioSelected.getObservacionCollection().isEmpty()) {
                Resultado existResultado=null;
            if(queryResultado!=null){
                try{
                    existResultado =queryResultado.getResultList().get(0);
                }catch(Exception ex){
                    System.out.println("No hay resultado");
                }
            }
                   
            if(existResultado==null){
                result.setIdestudioEstudio(estudioJPA);


                int idCaso=0;
                entityManager.refresh(estudioJPA.getIdfragmentoFragmento().getIdfrascoFrasco().getIdpacientePaciente());
                Collection<Caso> casos = estudioJPA.getIdfragmentoFragmento().getIdfrascoFrasco().getIdpacientePaciente().getCasoCollection();
                for (Caso caso : casos) {
                    if(caso.getIdfragmento()==estudioJPA.getIdfragmentoFragmento().getIdfragmento()){
                        idCaso = caso.getIdcaso();
                    }
                }

                Caso caso;
                caso = entityManager.find(Caso.class, idCaso);
                entityManager.refresh(estudioJPA);

                if(!estudioJPA.getObservacionCollection().isEmpty()){
                    caso.setEstado("PENDIENTE DE RESULTADO");
                    entityManager.persist(caso);
                }else{
                    System.out.println("Caso no tiene obseraciones");
                    entityManager.persist(caso);
                }
                JPanel pnFrm = new PanelResultado(result);
                JPanel pnView = new ViewerResultado(entityManager);
                
                mantenimientoAsociado.CargarMantenimiento(pnView, pnFrm, true);
                mantenimientoAsociado.MandarSizePadre(1148);
                
            }else{
                JOptionPane.showMessageDialog(null, "El estudio ya tiene un resultado.");
        
            }
            mantenimientoAsociado.MandarSizePadre(1148);
            }else{
                JOptionPane.showMessageDialog(null, "El estudio debe de tener alguna observación.");
            }
            
        }else{
            JOptionPane.showMessageDialog(null, "Seleccione un estudio para proceder.");
        }
        
    }//GEN-LAST:event_btnGenerarResultadoActionPerformed

    private void btnActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarActionPerformed
        estudios = entityManager.createNamedQuery("Estudio.findAll").getResultList();
        
        
        tablaEstudio.setModel(getModel(estudios));
        
        RedisenarTabla();
        Filtar();
        tablaEstudio.getSelectionModel().addSelectionInterval(0,0);
        Buscar();
        PasarACampos();
    }//GEN-LAST:event_btnActualizarActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton11ActionPerformed

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton12ActionPerformed

    private void txtBuscarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscarKeyReleased
        Filtar();
        if(evt.getKeyCode()==40){
            tablaEstudio.requestFocus();
        }
    }//GEN-LAST:event_txtBuscarKeyReleased

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        Filtar();
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void btnEditarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnEditarMouseClicked
        if(btnEditar.isSelected()){
            mantenimientoAsociado.CanModify(true);
            mantenimientoAsociado.MandarSizePadre(1148);
        }else{
            mantenimientoAsociado.CanModify(false);
            mantenimientoAsociado.MandarSizePadre(0);
        }
        EnableButtoms(btnEditar.isSelected(),btnEditar);
    }//GEN-LAST:event_btnEditarMouseClicked

    private void tablaEstudioKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tablaEstudioKeyReleased
        System.out.println(evt.getKeyCode());
        if(evt.getKeyCode()==40||evt.getKeyCode()==38){
            tablaEstudio.setSelectionBackground(Color.PINK);
            tablaEstudio.setSelectionForeground(Color.white);
        
            Buscar();
            PasarACampos();  
        }else{
            if(evt.getKeyCode()==127){
                if(mantenimientoAsociado.Borrar()){
                    estudios = entityManager.createNamedQuery("Estudio.findAll").getResultList();
                    tablaEstudio.setModel(getModel(estudios));
                    RedisenarTabla();
                    tablaEstudio.getSelectionModel().addSelectionInterval(0,0);
                    Buscar();
                    PasarACampos();
                }
            }
        }
    }//GEN-LAST:event_tablaEstudioKeyReleased

    private void btnBorrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBorrarActionPerformed
        if(mantenimientoAsociado.Borrar()){
            estudios = entityManager.createNamedQuery("Estudio.findAll").getResultList();
            tablaEstudio.setModel(getModel(estudios));
            RedisenarTabla();
            tablaEstudio.getSelectionModel().addSelectionInterval(0,0);
            Buscar();
            PasarACampos();
        }
    }//GEN-LAST:event_btnBorrarActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnEditarActionPerformed

    private void btnNuevoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnNuevoMouseClicked
        EnableButtoms(true, btnNuevo);
        mantenimientoAsociado.CanModify(true);
        mantenimientoAsociado.MandarSizePadre(1148);
        mantenimientoAsociado.Clean();

    }//GEN-LAST:event_btnNuevoMouseClicked

    private void btnNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnNuevoActionPerformed

    private void btnPacienteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnPacienteMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_btnPacienteMouseClicked

    private void btnPacienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPacienteActionPerformed
        JPanel pnFrm = new PanelPaciente();
        JPanel pnView = new ViewerPaciente(entityManager);
        mantenimientoAsociado.CargarMantenimiento(pnView, pnFrm, true);
        mantenimientoAsociado.MandarSizePadre(0);  
        
        Estudio est = entityManager.find(Estudio.class,estudio.getIdestudio());
        Paciente pac = est.getIdfragmentoFragmento().getIdfrascoFrasco().getIdpacientePaciente();
        
        ((ViewerPaciente)pnView).setPacienteSelected(pac);
        
    }//GEN-LAST:event_btnPacienteActionPerformed

    private void btnMedicoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnMedicoMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_btnMedicoMouseClicked

    private void btnMedicoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMedicoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnMedicoActionPerformed

    private void btnPatologoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnPatologoMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_btnPatologoMouseClicked

    private void btnPatologoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPatologoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnPatologoActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        TypedQuery<Resultado> queryResultado;
        if(estudio!=null){
            Resultado result = new Resultado();
            Estudio estudioJPA = entityManager.find(Estudio.class, estudio.getIdestudio());
            queryResultado = entityManager.createNamedQuery("Resultado.findByIdestudio",Resultado.class).
                    setParameter("idestudio",estudioJPA);
            Resultado existResultado=null;
            if(queryResultado!=null){
                try{
                    existResultado =queryResultado.getResultList().get(0);
                }catch(Exception ex){
                    System.out.println("No hay resultado");
                }
                
            }
                   
            if(existResultado==null){
                result.setIdestudioEstudio(estudioJPA);


                int idCaso=0;
                Collection<Caso> casos = estudioJPA.getIdfragmentoFragmento().getIdfrascoFrasco().getIdpacientePaciente().getCasoCollection();
                for (Caso caso : casos) {
                    if(caso.getIdfragmento()==estudioJPA.getIdfragmentoFragmento().getIdfragmento()){
                        idCaso = caso.getIdcaso();
                    }
                }

                Caso caso;
                caso = entityManager.find(Caso.class, idCaso);
                entityManager.refresh(estudioJPA);

                if(!estudioJPA.getObservacionCollection().isEmpty()){
                    caso.setEstado("PENDIENTE DE RESULTADO");
                    entityManager.persist(caso);
                }else{
                    System.out.println("Caso no tiene obseraciones");
                    entityManager.persist(caso);
                }
                JPanel pnFrm = new PanelResultado(result);
                JPanel pnView = new ViewerResultado(entityManager);
                
                mantenimientoAsociado.CargarMantenimiento(pnView, pnFrm, true);
                mantenimientoAsociado.MandarSizePadre(1148);
                
            }else{
                JOptionPane.showMessageDialog(null, "El estudio ya tiene un resultado.");
        
            }
            mantenimientoAsociado.MandarSizePadre(1148);
        }else{
            JOptionPane.showMessageDialog(null, "Seleccione un estudio para proceder.");
        }
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        btnEditar.setSelected(!btnEditar.isSelected());
        if(btnEditar.isSelected()){
            mantenimientoAsociado.CanModify(true);
            mantenimientoAsociado.MandarSizePadre(1148);
        }else{
            mantenimientoAsociado.CanModify(false);
            mantenimientoAsociado.MandarSizePadre(0);
        }
        EnableButtoms(btnEditar.isSelected(),btnEditar);
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
       if(mantenimientoAsociado.Borrar()){
            estudios = entityManager.createNamedQuery("Estudio.findAll").getResultList();
            tablaEstudio.setModel(getModel(estudios));
            RedisenarTabla();
            tablaEstudio.getSelectionModel().addSelectionInterval(0,0);
            Buscar();
            PasarACampos();
        }
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        EnableButtoms(false,null);
        btnEditar.setSelected(false);
        mantenimientoAsociado.CanModify(false);
        mantenimientoAsociado.MandarSizePadre(0);
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void tablaEstudioMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaEstudioMouseReleased
        int row = tablaEstudio.rowAtPoint(evt.getPoint());
        tablaEstudio.getSelectionModel().clearSelection();
        tablaEstudio.getSelectionModel().setSelectionInterval(row, row);
        Buscar();
        PasarACampos();        
        if(evt.isPopupTrigger()){
            
            jPopupMenu1.show(this.tablaEstudio,evt.getX(),evt.getY());
        }
        Estudio est = entityManager.find(Estudio.class, estudio.getIdestudio());
        setEstudioSelected(est);
    }//GEN-LAST:event_tablaEstudioMouseReleased

    
    public boolean EnableButtoms(boolean b, Component c){
        btnGenerarResultado.setEnabled(!b);
        btnAceptar.setEnabled(b);
        btnCancelar.setEnabled(b);
        btnNuevo.setEnabled(!b);
        btnEditar.setEnabled(!b);
        btnBorrar.setEnabled(!b);
        btnBuscar.setEnabled(!b);
        btnActualizar.setEnabled(!b);
        txtBuscar.setEnabled(!b);
        jButton8.setEnabled(!b);
        jButton11.setEnabled(!b);
        jButton12.setEnabled(!b);
        
        try {
            c.setEnabled(true);
        } catch (Exception e) {
        }
        
        return b;
    }
    @Override
    public void bind(IMantenimiento m) {
         mantenimientoAsociado = m;
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel PanelMenu;
    private javax.swing.JButton btnAceptar;
    private javax.swing.JButton btnActualizar;
    private javax.swing.JButton btnBorrar;
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JToggleButton btnEditar;
    private javax.swing.JButton btnGenerarResultado;
    private javax.swing.JButton btnMedico;
    private javax.swing.JButton btnNuevo;
    private javax.swing.JButton btnPaciente;
    private javax.swing.JButton btnPatologo;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton8;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JPopupMenu.Separator jSeparator4;
    private javax.swing.JPopupMenu.Separator jSeparator5;
    private javax.swing.JLabel lblCodigoEstudio;
    private javax.swing.JLabel lblNoReclamacion;
    private javax.swing.JLabel lblTipo;
    private javax.swing.JPanel panelContenedorObesrvaciones;
    private javax.swing.JPanel pnBotones;
    private javax.swing.JPanel pnBusqueda;
    private javax.swing.JPanel pnLista;
    private javax.swing.JPanel pnListaPadre;
    private javax.swing.JPanel pnMenuSuperior;
    private javax.swing.JPanel pnView;
    private javax.swing.JPanel pnViewPadre;
    private javax.swing.JTable tablaEstudio;
    private javax.swing.JTextField txtBuscar;
    // End of variables declaration//GEN-END:variables

    @Override//metodo de la interface que manda al panel formulario
    public void mandar(String txt) {
       // jLabel1.setText(txt);
    }
    public DefaultTableModel getModel(List<Estudio> lista){
        DefaultTableModel modelo = new DefaultTableModel(){
            public boolean isCellEditable(int rowIndex, int mColIndex) {
            return false;
      }
        };
        
        modelo.addColumn("Código");        
        modelo.addColumn("No. Reclamación");       
        modelo.addColumn("Fecha");     
        modelo.addColumn("TipoEstudio");
        modelo.addColumn("Fragmento");
        modelo.addColumn("Patologo");

        Object[] registro = new Object[6];
        
        Collections.reverse(lista);
        for(Estudio estudio: lista){
               
                    registro[0] = estudio.getIdestudio();
                    registro[1] = estudio.getNumReclamacion();
                    registro[2] = estudio.getFecha();
                    registro[3] = estudio.getIdtipoEstudioTipoEstudio().getIdtipoEstudio();
                    registro[4] = estudio.getIdfragmentoFragmento().getIdfragmento();
                    registro[5] = estudio.getIdpatologoPatologo().getIdpatologo();
                    
                modelo.addRow(registro);
               
            } 
        
        return modelo;
    }
    
    public void RedisenarTabla(){
        //tablaEstudio.setTableHeader(null);
        tablaEstudio.removeColumn(tablaEstudio.getColumnModel().getColumn(2));
        tablaEstudio.removeColumn(tablaEstudio.getColumnModel().getColumn(2));
        tablaEstudio.removeColumn(tablaEstudio.getColumnModel().getColumn(2));
        tablaEstudio.removeColumn(tablaEstudio.getColumnModel().getColumn(2));
    }
    
    @Override
    public void Buscar() {
        tablaEstudio.setSelectionBackground(Color.PINK);
        tablaEstudio.setSelectionForeground(Color.white);
        estudio = new EstudioDTO();
        if(tablaEstudio.getRowSorter()==null){
            estudio.setIdestudio((Integer)tablaEstudio.getModel().getValueAt(tablaEstudio.getSelectedRow(), 0));
            estudio.setNumReclamacion((String) tablaEstudio.getModel().getValueAt(tablaEstudio.getSelectedRow(), 1));
            estudio.setFecha((java.util.Date) tablaEstudio.getModel().getValueAt(tablaEstudio.getSelectedRow(), 2));
            estudio.setIdtipoEstudioTipoEstudio((Integer) tablaEstudio.getModel().getValueAt(tablaEstudio.getSelectedRow(), 3));
            estudio.setIdfragmentoFragmento((Integer) tablaEstudio.getModel().getValueAt(tablaEstudio.getSelectedRow(), 4));
            estudio.setIdpatologoPatologo((Integer) tablaEstudio.getModel().getValueAt(tablaEstudio.getSelectedRow(), 5));
       
        }else{
            int valor = tablaEstudio.convertRowIndexToModel(tablaEstudio.getSelectedRow());
            estudio.setIdestudio((Integer)tablaEstudio.getModel().getValueAt(valor, 0));
            estudio.setNumReclamacion((String) tablaEstudio.getModel().getValueAt(valor, 1));
            estudio.setFecha((java.util.Date) tablaEstudio.getModel().getValueAt(valor, 2));
            estudio.setIdtipoEstudioTipoEstudio((Integer) tablaEstudio.getModel().getValueAt(valor, 3));
            estudio.setIdfragmentoFragmento((Integer) tablaEstudio.getModel().getValueAt(valor, 4));
            estudio.setIdpatologoPatologo((Integer) tablaEstudio.getModel().getValueAt(valor, 5));
       
        }
        
        //PasarACampos();
    }

    private void Filtar() {
        DefaultTableModel model = (DefaultTableModel) tablaEstudio.getModel();
//      DefaultTableModel tmodel =  (DefaultTableModel) tablaResultado.getColumnModel();
        DefaultTableModel newModel = new DefaultTableModel();
        
        TableRowSorter<DefaultTableModel> sorter = new TableRowSorter<DefaultTableModel>(model);
        tablaEstudio.setRowSorter(sorter);
        
        RowFilter<DefaultTableModel,Object> filter = RowFilter.regexFilter(txtBuscar.getText(), 0);
        sorter.setRowFilter(filter);
        
        
        tablaEstudio.getSelectionModel().addSelectionInterval(0,0);
        Buscar();
        PasarACampos();
    }

    @Override
    public void PasarACampos() {
        String nombrePatologo;
        Estudio estudioJPA = entityManager.find(Estudio.class, estudio.getIdestudio());
        
        lblCodigoEstudio.setText("#"+Integer.toString(estudioJPA.getIdestudio()));
        lblNoReclamacion.setText(estudioJPA.getNumReclamacion());
        lblTipo.setText(estudioJPA.getIdtipoEstudioTipoEstudio().getNombre());
        
        
        btnPaciente.setText(estudioJPA.getIdfragmentoFragmento().getIdfrascoFrasco().getIdpacientePaciente().getNombre());
        btnMedico.setText(estudioJPA.getIdfragmentoFragmento().getIdmedicoMedico().getNombre());
        try{
            nombrePatologo = estudioJPA.getIdpatologoPatologo().getNombre();
            btnPatologo.setEnabled(true);
        }catch(NullPointerException e){
            nombrePatologo = "PATOLOGO NO ASIGNADO";
            btnPatologo.setEnabled(false);
        }
        btnPatologo.setText(nombrePatologo);
       
        mantenimientoAsociado.Show((Object)estudio);
        
        PanelObservacionesView pnOb;
        panelContenedorObesrvaciones.removeAll();
        for (Observacion ob : estudioJPA.getObservacionCollection()) {
            
            pnOb = new PanelObservacionesView(ob);
            panelContenedorObesrvaciones.add(pnOb);
            pnOb.setVisible(true);
            pnOb.show();
        }
        this.revalidate();
        this.repaint();
    }

    /**
     * @return the estudioSelected
     */
    public Estudio getEstudioSelected() {
        return estudioSelected;
    }

    /**
     * @param estudioSelected the estudioSelected to set
     */
    public void setEstudioSelected(Estudio estudioSelected) {
        
        TableModel dtm = tablaEstudio.getModel();
        this.estudioSelected = estudioSelected;
        for (int i=0; i<dtm.getRowCount(); i++) {
            int id = (int) dtm.getValueAt(i, 0);
            if(id == estudioSelected.getIdestudio()){
                this.estudioSelected = estudioSelected;
                tablaEstudio.getSelectionModel().clearSelection();
                tablaEstudio.getSelectionModel().addSelectionInterval(i,i);
                Buscar();
                PasarACampos();
            }
        }
    }
}

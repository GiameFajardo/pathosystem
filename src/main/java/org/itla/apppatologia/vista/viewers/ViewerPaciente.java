/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.itla.apppatologia.vista.viewers;

import java.awt.Color;
import java.awt.Component;
import java.util.Collections;
import java.util.List;
import javax.persistence.EntityManager;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTable;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;
import org.itla.apppatologia.DTO.PacienteDTO;
import org.itla.apppatologia.Repository.Caso;
import org.itla.apppatologia.Repository.Paciente;
import org.itla.apppatologia.modelo.Contexto;
import org.itla.apppatologia.modelo.PersistenceUnits;
import org.itla.apppatologia.utilidades.GenerarReporte;
import org.itla.apppatologia.utilidades.Utilidades;
import org.itla.apppatologia.vista.componentes.PanelCasoPaciente;
import org.itla.apppatologia.vista.mantenimientos.IMantenimiento;
import org.itla.apppatologia.vista.mantenimientos.PanelFragmento;

/**
 *
 * @author Giame
 */
public class ViewerPaciente extends javax.swing.JPanel implements IViewerObservable{

    EntityManager entityManager;
    Contexto context;
    private List<Paciente> pacientes;
    private PacienteDTO paciente;
    private Paciente pacienteSelected;
    DefaultTableModel dtm;
    IMantenimiento mantenimientoAsociado;
    //private JList<Aseguradora> lista = new JList<Aseguradora>();
    /**
     * Creates new form ViewerARS
     */
    
    public ViewerPaciente() {
        initComponents();
        
        
        
        context = new  Contexto();
        entityManager = context.getEntityManager(PersistenceUnits.getLocalContext());
        
        pacientes = entityManager.createNamedQuery("Paciente.findByIsBorrado").
                setParameter("isBorrado", false).getResultList();
        dtm =getModel(pacientes);
        
        tablaPaciente.setModel(dtm);
        tablaPaciente.setAutoResizeMode(JTable.AUTO_RESIZE_ALL_COLUMNS);
        tablaPaciente.getColumnModel().getColumn(1).setMinWidth(5);
        tablaPaciente.getColumnModel().getColumn(1).setPreferredWidth(5);
        

        RedisenarTabla();
        
        String txtCantidadPacientes = "<html>El"+"% de los pacientes están afiliados a esta aseguradora. Con un total de"+" pacienetes.</html>";
        String txtFechaPrimerPacientes = "<html>El primer paciente con esta aseguradora fue registrado el día</html>";
        String txtFechaUltimoPacientes = "<html>El ultimo paciente con esta aseguradora fue registrado el día</html>";
      
//        jLabel6.setText(txtCantidadPacientes);
    }
    public ViewerPaciente(EntityManager em) {
        initComponents();
        
        
        entityManager=em;
//        context = new  Contexto();
//        entityManager = context.getEntityManager(PersistenceUnits.getLocalContext());
        
        pacientes = entityManager.createNamedQuery("Paciente.findByIsBorrado").
                setParameter("isBorrado", false).getResultList();
        
        
        tablaPaciente.setModel(getModel(pacientes));
        
        RedisenarTabla();
        
        String txtCantidadPacientes = "<html>El"+"% de los pacientes están afiliados a esta aseguradora. Con un total de"+" pacienetes.</html>";
        String txtFechaPrimerPacientes = "<html>El primer paciente con esta aseguradora fue registrado el día</html>";
        String txtFechaUltimoPacientes = "<html>El ultimo paciente con esta aseguradora fue registrado el día</html>";
        
//        jLabel6.setText(txtCantidadPacientes);
        
        tablaPaciente.getSelectionModel().addSelectionInterval(0,0);
        Buscar();
        Paciente  pacienteJPA = entityManager.find(Paciente.class, paciente.getIdpaciente());
        EnableButtoms(false,null);
    }

    @Override
    public String getName(){
        return "paciente";
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenu1 = new javax.swing.JPopupMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JPopupMenu.Separator();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jSeparator4 = new javax.swing.JPopupMenu.Separator();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenuItem5 = new javax.swing.JMenuItem();
        pnListaPadre = new javax.swing.JPanel();
        pnBusqueda = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        btnNuevo = new javax.swing.JButton();
        btnEditar = new javax.swing.JToggleButton();
        btnBorrar = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        txtBuscar = new javax.swing.JTextField();
        btnBuscar = new javax.swing.JButton();
        btnActualizar = new javax.swing.JButton();
        pnLista = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tablaPaciente = new javax.swing.JTable();
        pnViewPadre = new javax.swing.JPanel();
        pnView = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jPanel2 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        lblEdad = new javax.swing.JLabel();
        lblSexo = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        lblTelefono = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel4 = new javax.swing.JLabel();
        lblDireccion = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        lblNombrePaciente = new javax.swing.JLabel();
        jPanel11 = new javax.swing.JPanel();
        jLabel17 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        pnCasos = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jSeparator3 = new javax.swing.JSeparator();
        jPanel9 = new javax.swing.JPanel();
        jPanel10 = new javax.swing.JPanel();
        jLabel18 = new javax.swing.JLabel();
        pnBotones = new javax.swing.JPanel();
        PanelMenu = new javax.swing.JPanel();
        pnMenuSuperior = new javax.swing.JPanel();
        btnAceptar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        jPanel12 = new javax.swing.JPanel();
        btnAgregarFragmento = new javax.swing.JButton();
        btnReporteDePacientes = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();

        jPopupMenu1.setBackground(new java.awt.Color(225, 212, 212));
        jPopupMenu1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jMenuItem1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/itla/apppatologia/vista/PNG/botones/radiacion (1)_1.png"))); // NOI18N
        jMenuItem1.setText("Agregar fragmento");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jPopupMenu1.add(jMenuItem1);
        jPopupMenu1.add(jSeparator2);

        jMenuItem3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/itla/apppatologia/vista/PNG/persistencia/lapiz.png"))); // NOI18N
        jMenuItem3.setText("Editar");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jPopupMenu1.add(jMenuItem3);

        jMenuItem2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/itla/apppatologia/vista/PNG/persistencia/goma-de-borrar.png"))); // NOI18N
        jMenuItem2.setText("Borrar");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jPopupMenu1.add(jMenuItem2);
        jPopupMenu1.add(jSeparator4);

        jMenu1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/itla/apppatologia/vista/PNG/persistencia/copia.png"))); // NOI18N
        jMenu1.setText("Copiar");

        jMenuItem4.setText("Nombre");
        jMenu1.add(jMenuItem4);

        jMenuItem5.setText("Paciente");
        jMenu1.add(jMenuItem5);

        jPopupMenu1.add(jMenu1);

        setBackground(new java.awt.Color(255, 102, 255));
        setLayout(new java.awt.BorderLayout());

        pnListaPadre.setPreferredSize(new java.awt.Dimension(294, 370));
        pnListaPadre.setLayout(new javax.swing.BoxLayout(pnListaPadre, javax.swing.BoxLayout.Y_AXIS));

        pnBusqueda.setPreferredSize(new java.awt.Dimension(165, 80));
        pnBusqueda.setRequestFocusEnabled(false);
        pnBusqueda.setLayout(new java.awt.GridLayout(2, 0));

        jPanel5.setLayout(new javax.swing.BoxLayout(jPanel5, javax.swing.BoxLayout.LINE_AXIS));

        btnNuevo.setBackground(new java.awt.Color(255, 230, 255));
        btnNuevo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/itla/apppatologia/vista/PNG/botones/anadir (1).png"))); // NOI18N
        btnNuevo.setText("Nuevo");
        btnNuevo.setToolTipText("Crear nuevo paciente.");
        btnNuevo.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnNuevo.setPreferredSize(new java.awt.Dimension(91, 44));
        btnNuevo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnNuevoMouseClicked(evt);
            }
        });
        btnNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoActionPerformed(evt);
            }
        });
        jPanel5.add(btnNuevo);

        btnEditar.setBackground(new java.awt.Color(255, 230, 255));
        btnEditar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/itla/apppatologia/vista/PNG/persistencia/lapiz.png"))); // NOI18N
        btnEditar.setText("Editar");
        btnEditar.setToolTipText("Editar paciente seleccionado.");
        btnEditar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnEditar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnEditarMouseClicked(evt);
            }
        });
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });
        jPanel5.add(btnEditar);

        btnBorrar.setBackground(new java.awt.Color(255, 230, 255));
        btnBorrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/itla/apppatologia/vista/PNG/persistencia/goma-de-borrar.png"))); // NOI18N
        btnBorrar.setText("Borrar");
        btnBorrar.setToolTipText("Borrar paciene seleccionado.");
        btnBorrar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnBorrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBorrarActionPerformed(evt);
            }
        });
        jPanel5.add(btnBorrar);

        pnBusqueda.add(jPanel5);

        jPanel4.setLayout(new javax.swing.BoxLayout(jPanel4, javax.swing.BoxLayout.LINE_AXIS));

        txtBuscar.setPreferredSize(new java.awt.Dimension(50, 28));
        txtBuscar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtBuscarKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtBuscarKeyReleased(evt);
            }
        });
        jPanel4.add(txtBuscar);

        btnBuscar.setBackground(new java.awt.Color(255, 230, 255));
        btnBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/itla/apppatologia/vista/PNG/persistencia/busqueda.png"))); // NOI18N
        btnBuscar.setToolTipText("Buscar paciente de la lista.");
        btnBuscar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });
        jPanel4.add(btnBuscar);

        btnActualizar.setBackground(new java.awt.Color(255, 230, 255));
        btnActualizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/itla/apppatologia/vista/PNG/persistencia/flechas-actualizar.png"))); // NOI18N
        btnActualizar.setToolTipText("Actializar lista de pacientes.");
        btnActualizar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarActionPerformed(evt);
            }
        });
        jPanel4.add(btnActualizar);

        pnBusqueda.add(jPanel4);

        pnListaPadre.add(pnBusqueda);

        pnLista.setLayout(new java.awt.BorderLayout());

        tablaPaciente.setFont(new java.awt.Font("sansserif", 1, 16)); // NOI18N
        tablaPaciente.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tablaPaciente.setRowHeight(30);
        tablaPaciente.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tablaPacienteMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tablaPacienteMouseReleased(evt);
            }
        });
        tablaPaciente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tablaPacienteKeyReleased(evt);
            }
        });
        jScrollPane2.setViewportView(tablaPaciente);

        pnLista.add(jScrollPane2, java.awt.BorderLayout.CENTER);

        pnListaPadre.add(pnLista);

        add(pnListaPadre, java.awt.BorderLayout.LINE_START);

        pnViewPadre.setBackground(new java.awt.Color(255, 255, 255));
        pnViewPadre.setBorder(null);
        pnViewPadre.setLayout(new java.awt.BorderLayout());

        pnView.setBackground(new java.awt.Color(255, 255, 255));
        pnView.setBorder(null);
        pnView.setForeground(new java.awt.Color(255, 255, 255));
        pnView.setLayout(new java.awt.BorderLayout());

        jScrollPane3.setBackground(new java.awt.Color(255, 255, 255));
        jScrollPane3.setBorder(null);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setPreferredSize(new java.awt.Dimension(300, 600));
        jPanel2.setLayout(new java.awt.BorderLayout());

        jPanel7.setBackground(new java.awt.Color(255, 245, 255));
        jPanel7.setPreferredSize(new java.awt.Dimension(430, 660));
        jPanel7.setLayout(new java.awt.BorderLayout());

        jPanel8.setBackground(new java.awt.Color(255, 245, 255));
        jPanel8.setPreferredSize(new java.awt.Dimension(430, 300));

        jPanel6.setBackground(new java.awt.Color(255, 251, 251));

        jLabel3.setFont(new java.awt.Font("sansserif", 1, 16)); // NOI18N
        jLabel3.setText("Edad:");

        lblEdad.setFont(new java.awt.Font("sansserif", 0, 16)); // NOI18N
        lblEdad.setText("jLabel5");

        lblSexo.setFont(new java.awt.Font("sansserif", 0, 16)); // NOI18N
        lblSexo.setText("jLabel12");

        jLabel5.setFont(new java.awt.Font("sansserif", 1, 16)); // NOI18N
        jLabel5.setText("Sexo:");

        jLabel2.setFont(new java.awt.Font("sansserif", 1, 16)); // NOI18N
        jLabel2.setText("Telefono:");

        lblTelefono.setFont(new java.awt.Font("sansserif", 0, 16)); // NOI18N
        lblTelefono.setText("809-852-9654");

        jLabel4.setFont(new java.awt.Font("sansserif", 1, 16)); // NOI18N
        jLabel4.setText("Dirección:");

        lblDireccion.setFont(new java.awt.Font("sansserif", 0, 16)); // NOI18N
        lblDireccion.setText("Calle 32 No.84 Reparto, Santiago, Rep.Dom.");
        lblDireccion.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblSexo)
                        .addGap(99, 99, 99)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblEdad))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblDireccion, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(19, Short.MAX_VALUE))
            .addComponent(jSeparator1)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel5)
                        .addComponent(lblSexo))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3)
                        .addComponent(lblEdad)))
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(lblTelefono))
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDireccion, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addContainerGap())
        );

        jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/itla/apppatologia/vista/PNG/principales/bata-de-paciente.png"))); // NOI18N

        jLabel14.setFont(new java.awt.Font("sansserif", 1, 24)); // NOI18N
        jLabel14.setText("Paciente");

        jLabel13.setFont(new java.awt.Font("sansserif", 0, 24)); // NOI18N
        jLabel13.setText("jLabel13");

        lblNombrePaciente.setBackground(new java.awt.Color(255, 255, 255));
        lblNombrePaciente.setFont(new java.awt.Font("sansserif", 2, 26)); // NOI18N
        lblNombrePaciente.setText("nombre ARS");

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 430, Short.MAX_VALUE)
            .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel8Layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel8Layout.createSequentialGroup()
                            .addGap(14, 14, 14)
                            .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                            .addComponent(jLabel11)
                            .addGap(18, 18, 18)
                            .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel8Layout.createSequentialGroup()
                                    .addComponent(jLabel14)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jLabel13))
                                .addComponent(lblNombrePaciente, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
            .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel8Layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel11)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                            .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel14)
                                .addComponent(jLabel13))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(lblNombrePaciente)
                            .addGap(18, 18, 18)))
                    .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        jPanel7.add(jPanel8, java.awt.BorderLayout.PAGE_START);

        jPanel11.setBackground(new java.awt.Color(255, 245, 255));
        jPanel11.setLayout(new java.awt.BorderLayout());

        jLabel17.setFont(new java.awt.Font("sansserif", 1, 24)); // NOI18N
        jLabel17.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel17.setText("CASOS DE PACIENTE");
        jLabel17.setPreferredSize(new java.awt.Dimension(252, 40));
        jPanel11.add(jLabel17, java.awt.BorderLayout.PAGE_START);

        jScrollPane1.setBackground(new java.awt.Color(255, 245, 255));
        jScrollPane1.setBorder(null);
        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane1.setViewportBorder(null);

        pnCasos.setBackground(new java.awt.Color(255, 245, 255));
        pnCasos.setBorder(null);
        pnCasos.setLayout(new javax.swing.BoxLayout(pnCasos, javax.swing.BoxLayout.Y_AXIS));
        jScrollPane1.setViewportView(pnCasos);

        jPanel11.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        jPanel7.add(jPanel11, java.awt.BorderLayout.CENTER);

        jPanel2.add(jPanel7, java.awt.BorderLayout.LINE_START);

        jPanel3.setLayout(new java.awt.BorderLayout());

        jSeparator3.setBackground(new java.awt.Color(0, 255, 51));
        jSeparator3.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jPanel3.add(jSeparator3, java.awt.BorderLayout.LINE_START);

        jPanel9.setBackground(new java.awt.Color(255, 255, 255));
        jPanel9.setLayout(new java.awt.BorderLayout());

        jPanel10.setBackground(new java.awt.Color(255, 255, 255));
        jPanel10.setPreferredSize(new java.awt.Dimension(174, 50));

        jLabel18.setFont(new java.awt.Font("sansserif", 1, 24)); // NOI18N
        jLabel18.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel18.setText("DATOS GENERALES");
        jLabel18.setPreferredSize(new java.awt.Dimension(252, 40));

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 239, Short.MAX_VALUE)
            .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel10Layout.createSequentialGroup()
                    .addGap(0, 0, 0)
                    .addComponent(jLabel18, javax.swing.GroupLayout.DEFAULT_SIZE, 239, Short.MAX_VALUE)
                    .addGap(0, 0, 0)))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 50, Short.MAX_VALUE)
            .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel10Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        jPanel9.add(jPanel10, java.awt.BorderLayout.PAGE_START);

        jPanel3.add(jPanel9, java.awt.BorderLayout.CENTER);

        jPanel2.add(jPanel3, java.awt.BorderLayout.CENTER);

        jScrollPane3.setViewportView(jPanel2);

        pnView.add(jScrollPane3, java.awt.BorderLayout.CENTER);

        pnViewPadre.add(pnView, java.awt.BorderLayout.CENTER);

        pnBotones.setLayout(new java.awt.BorderLayout());

        PanelMenu.setBackground(new java.awt.Color(255, 252, 236));
        PanelMenu.setBorder(null);
        PanelMenu.setPreferredSize(new java.awt.Dimension(85, 356));
        PanelMenu.setLayout(new java.awt.GridLayout(0, 1));

        pnMenuSuperior.setBackground(new java.awt.Color(255, 255, 255));
        pnMenuSuperior.setPreferredSize(new java.awt.Dimension(70, 170));
        pnMenuSuperior.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                pnMenuSuperiorMouseDragged(evt);
            }
        });
        pnMenuSuperior.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                pnMenuSuperiorMousePressed(evt);
            }
        });
        pnMenuSuperior.setLayout(new java.awt.GridLayout(2, 0));

        btnAceptar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/itla/apppatologia/vista/PNG/persistencia/comprobado.png"))); // NOI18N
        btnAceptar.setToolTipText("Aceptar");
        btnAceptar.setContentAreaFilled(false);
        btnAceptar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnAceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAceptarActionPerformed(evt);
            }
        });
        pnMenuSuperior.add(btnAceptar);

        btnCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/itla/apppatologia/vista/PNG/persistencia/desenfrenado.png"))); // NOI18N
        btnCancelar.setToolTipText("Cancelar");
        btnCancelar.setContentAreaFilled(false);
        btnCancelar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });
        pnMenuSuperior.add(btnCancelar);

        PanelMenu.add(pnMenuSuperior);

        jPanel12.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 85, Short.MAX_VALUE)
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 128, Short.MAX_VALUE)
        );

        PanelMenu.add(jPanel12);

        btnAgregarFragmento.setBackground(new java.awt.Color(255, 237, 255));
        btnAgregarFragmento.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/itla/apppatologia/vista/PNG/botones/radiacion (2).png"))); // NOI18N
        btnAgregarFragmento.setText("<html><p ALIGN=center>Agregar Fragmento</p></html>");
        btnAgregarFragmento.setToolTipText("Agregar fragmento a paciente seleccionado.");
        btnAgregarFragmento.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnAgregarFragmento.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnAgregarFragmento.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnAgregarFragmento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarFragmentoActionPerformed(evt);
            }
        });
        PanelMenu.add(btnAgregarFragmento);

        btnReporteDePacientes.setBackground(new java.awt.Color(255, 237, 255));
        btnReporteDePacientes.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/itla/apppatologia/vista/PNG/circulos/reportar (1).png"))); // NOI18N
        btnReporteDePacientes.setText("<html><p ALIGN=center>Reporte de pacientes</p></html>");
        btnReporteDePacientes.setToolTipText("Generar reporte de todos los pacientes.");
        btnReporteDePacientes.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnReporteDePacientes.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnReporteDePacientes.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnReporteDePacientes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReporteDePacientesActionPerformed(evt);
            }
        });
        PanelMenu.add(btnReporteDePacientes);

        jButton9.setBackground(new java.awt.Color(255, 237, 255));
        jButton9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/itla/apppatologia/vista/PNG/botones/cancelar (3).png"))); // NOI18N
        jButton9.setText("<html><p ALIGN=center>sin implementar</p></html>");
        jButton9.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton9.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton9.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });
        PanelMenu.add(jButton9);

        jButton10.setBackground(new java.awt.Color(255, 237, 255));
        jButton10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/itla/apppatologia/vista/PNG/botones/cancelar (3).png"))); // NOI18N
        jButton10.setText("<html><p ALIGN=center>sin implementar</p></html>");
        jButton10.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton10.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton10.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });
        PanelMenu.add(jButton10);

        pnBotones.add(PanelMenu, java.awt.BorderLayout.LINE_START);

        pnViewPadre.add(pnBotones, java.awt.BorderLayout.LINE_END);

        add(pnViewPadre, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void pnMenuSuperiorMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnMenuSuperiorMouseDragged
//        Point point = MouseInfo.getPointerInfo().getLocation();
//
//        this.setLocation(point.x-x,point.y-y);
    }//GEN-LAST:event_pnMenuSuperiorMouseDragged

    private void pnMenuSuperiorMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnMenuSuperiorMousePressed
//        x = evt.getX();
//        y = evt.getY();
    }//GEN-LAST:event_pnMenuSuperiorMousePressed

    private void tablaPacienteMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaPacienteMousePressed
//        tablaPaciente.setSelectionBackground(Color.PINK);
//        tablaPaciente.setSelectionForeground(Color.white);
        Buscar();
        PasarACampos();
//        paciente = new PacienteDTO();
//        paciente.setIdpaciente((Integer)tablaPaciente.getModel().getValueAt(tablaPaciente.getSelectedRow(), 0));
//        paciente.setNombre((String) tablaPaciente.getModel().getValueAt(tablaPaciente.getSelectedRow(), 1));
//        paciente.setApellido((String) tablaPaciente.getModel().getValueAt(tablaPaciente.getSelectedRow(), 2));
//        paciente.setTelefono((String) tablaPaciente.getModel().getValueAt(tablaPaciente.getSelectedRow(), 3));
//        paciente.setDireccion((String) tablaPaciente.getModel().getValueAt(tablaPaciente.getSelectedRow(), 4));
//        paciente.setFechaNacimiento((java.util.Date) tablaPaciente.getModel().getValueAt(tablaPaciente.getSelectedRow(), 5));
//        paciente.setIdtipoPaciente((Integer) tablaPaciente.getModel().getValueAt(tablaPaciente.getSelectedRow(), 6));
//        paciente.setSexo((String) tablaPaciente.getModel().getValueAt(tablaPaciente.getSelectedRow(), 7));
//        paciente.setIsActivo((boolean) tablaPaciente.getModel().getValueAt(tablaPaciente.getSelectedRow(), 8));
//        paciente.setIsBorrado((boolean) tablaPaciente.getModel().getValueAt(tablaPaciente.getSelectedRow(), 9));
//
//        
//        lblNombrePaciente.setText(paciente.getNombre());
//        lblTelefono.setText(paciente.getTelefono());
//        lblEdad.setText(paciente.getFechaNacimiento().toLocaleString().substring(0, 11));
//        lblDireccion.setText(paciente.getDireccion());
//        lblSexo.setText(paciente.getSexo());
//        
//        mantenimientoAsociado.Show((Object)paciente);
    }//GEN-LAST:event_tablaPacienteMousePressed

    private void btnAceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAceptarActionPerformed
        Paciente pacient= (Paciente)mantenimientoAsociado.Save();

        pacientes = entityManager.createNamedQuery("Paciente.findByIsBorrado").
                setParameter("isBorrado", false).getResultList();
        tablaPaciente.setModel(getModel(pacientes));
        RedisenarTabla();
        tablaPaciente.getSelectionModel().addSelectionInterval(0,0);
        PasarACampos();
        EnableButtoms(false,null);
        
        mantenimientoAsociado.MandarSizePadre(0);
        if(btnEditar.isSelected()){
            btnEditar.setSelected(false);
        }
        setPacienteSelected(pacient);
    }//GEN-LAST:event_btnAceptarActionPerformed

    private void txtBuscarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscarKeyPressed
//        DefaultTableModel model = (DefaultTableModel) tablaPaciente.getModel();
//        DefaultTableModel newModel = new DefaultTableModel();
//        
//        Object[] registro = new Object[4];
//        
//        for (int i = 0; i < model.getRowCount(); i++) {
//            if (model.getValueAt(i, 1).toString().contains(jTextField1.getText().subSequence(0, 1))) {
//                registro[0] = model.getValueAt(i, 0);
//                registro[1] = model.getValueAt(i, 1);
//                registro[2] = model.getValueAt(i, 2);
//                registro[3] = model.getValueAt(i, 3);
//                
//                newModel.addRow(registro);
//            }
//            
//        }
//        tablaPaciente.setModel(newModel);
    }//GEN-LAST:event_txtBuscarKeyPressed

    private void btnAgregarFragmentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarFragmentoActionPerformed
        if(paciente!=null){
            JPanel pnForm = new PanelFragmento(paciente);
//          MainFrame padre = (MainFrame)observador;
        
            JPanel pnViewer = new ViewerFragmento(entityManager);
            mantenimientoAsociado.CargarMantenimiento(pnViewer, pnForm, true);
            mantenimientoAsociado.MandarSizePadre(1148);
            ((ViewerFragmento)pnViewer).EnableButtoms(true, null);
//            ((IMantenimiento)pnForm).Clean();
        }else{
            JOptionPane.showMessageDialog(null,"Seleccione un paciente para proceder.");
        }
    }//GEN-LAST:event_btnAgregarFragmentoActionPerformed

    private void btnActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarActionPerformed
        Component[] pnsCaso = pnCasos.getComponents();
        for (Component component : pnsCaso) {
            ((PanelCasoPaciente)component).updateButtoms();
        }
        
        pacientes = entityManager.createNamedQuery("Paciente.findByIsBorrado").
                setParameter("isBorrado", false).getResultList();
//        for (Paciente pac : pacientes) {
//            entityManager.refresh(pac);
//        }
        tablaPaciente.setModel(getModel(pacientes));
        for (Paciente pac : pacientes) {
            entityManager.refresh(pac);
            for (Caso caso : pac.getCasoCollection()) {
                entityManager.refresh(caso);
                
            }
        }
        
        RedisenarTabla();
        Filtar();
        
        tablaPaciente.getSelectionModel().addSelectionInterval(0,0);
        
//        Buscar();
//        PasarACampos();
        
        setPacienteSelected(entityManager.find(Paciente.class, paciente.getIdpaciente()));
    }//GEN-LAST:event_btnActualizarActionPerformed

    private void btnReporteDePacientesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReporteDePacientesActionPerformed
        GenerarReporte.Pacientes();
    }//GEN-LAST:event_btnReporteDePacientesActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton10ActionPerformed

    private void btnEditarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnEditarMouseClicked
        if(btnEditar.isSelected()){
            mantenimientoAsociado.CanModify(true);
            mantenimientoAsociado.MandarSizePadre(1148);
        }else{
            mantenimientoAsociado.CanModify(false);
            mantenimientoAsociado.MandarSizePadre(0);
        }
        EnableButtoms(btnEditar.isSelected(),btnEditar);
    }//GEN-LAST:event_btnEditarMouseClicked

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnEditarActionPerformed

    private void txtBuscarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscarKeyReleased
        Filtar();
        if(evt.getKeyCode()==40){
            tablaPaciente.requestFocus();
        }
    }//GEN-LAST:event_txtBuscarKeyReleased

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        Filtar();
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void tablaPacienteKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tablaPacienteKeyReleased
        if(evt.getKeyCode()==40||evt.getKeyCode()==38){
            tablaPaciente.setSelectionBackground(Color.PINK);
            tablaPaciente.setSelectionForeground(Color.white);
        
            Buscar();
            PasarACampos();  
        }else{
            if(evt.getKeyCode()==127){
                if(mantenimientoAsociado.Borrar()){
                    pacientes = entityManager.createNamedQuery("Paciente.findByIsBorrado").
                        setParameter("isBorrado", false).getResultList();
                    tablaPaciente.setModel(getModel(pacientes));
                    RedisenarTabla();
                    tablaPaciente.getSelectionModel().addSelectionInterval(0,0);
                    Buscar();
                    PasarACampos();
                }
            }
        }
    }//GEN-LAST:event_tablaPacienteKeyReleased

    private void btnBorrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBorrarActionPerformed
        if(mantenimientoAsociado.Borrar()){
            pacientes = entityManager.createNamedQuery("Paciente.findByIsBorrado").
                setParameter("isBorrado", false).getResultList();
            tablaPaciente.setModel(getModel(pacientes));
            RedisenarTabla();
            tablaPaciente.getSelectionModel().addSelectionInterval(0,0);
            Buscar();
            PasarACampos();
        }
        
        
        
    }//GEN-LAST:event_btnBorrarActionPerformed

    private void btnNuevoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnNuevoMouseClicked

        mantenimientoAsociado.CanModify(true);
        mantenimientoAsociado.MandarSizePadre(1148);
        mantenimientoAsociado.Clean();
        EnableButtoms(true, btnNuevo);
    }//GEN-LAST:event_btnNuevoMouseClicked

    private void btnNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnNuevoActionPerformed

    private void tablaPacienteMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaPacienteMouseReleased
        int row = tablaPaciente.rowAtPoint(evt.getPoint());
        tablaPaciente.getSelectionModel().clearSelection();
        tablaPaciente.getSelectionModel().setSelectionInterval(row, row);
        Buscar();
        PasarACampos();        
        if(evt.isPopupTrigger()){
            
            jPopupMenu1.show(this.tablaPaciente,evt.getX(),evt.getY());
        }
    }//GEN-LAST:event_tablaPacienteMouseReleased

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        if(paciente!=null){
            JPanel pnForm = new PanelFragmento(paciente);
//          MainFrame padre = (MainFrame)observador;
        
            JPanel pnViewer = new ViewerFragmento(entityManager);
            mantenimientoAsociado.CargarMantenimiento(pnViewer, pnForm, true);
            mantenimientoAsociado.MandarSizePadre(1148);
//            ((IMantenimiento)pnForm).Clean();
        }else{
            JOptionPane.showMessageDialog(null,"Seleccione un paciente para proceder.");
        }
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        EnableButtoms(false,null);
        btnEditar.setSelected(false);
        mantenimientoAsociado.CanModify(false);
        mantenimientoAsociado.MandarSizePadre(0);
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
         btnEditar.setSelected(!btnEditar.isSelected());
        if(btnEditar.isSelected()){
            mantenimientoAsociado.CanModify(true);
            mantenimientoAsociado.MandarSizePadre(1148);
        }else{
            mantenimientoAsociado.CanModify(false);
            mantenimientoAsociado.MandarSizePadre(0);
        }
        EnableButtoms(btnEditar.isSelected(),btnEditar);
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        if(mantenimientoAsociado.Borrar()){
            pacientes = entityManager.createNamedQuery("Paciente.findByIsBorrado").
                setParameter("isBorrado", false).getResultList();
            tablaPaciente.setModel(getModel(pacientes));
            RedisenarTabla();
            tablaPaciente.getSelectionModel().addSelectionInterval(0,0);
            Buscar();
            PasarACampos();
        }
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    
    private void Filtar() {
        DefaultTableModel model = (DefaultTableModel) tablaPaciente.getModel();
//      DefaultTableModel tmodel =  (DefaultTableModel) tablaResultado.getColumnModel();
        DefaultTableModel newModel = new DefaultTableModel();
        
        if(txtBuscar.getText().length()!=0){
            TableRowSorter<DefaultTableModel> sorter = new TableRowSorter<DefaultTableModel>(model);
            tablaPaciente.setRowSorter(sorter);

            RowFilter<DefaultTableModel,Object> filter = RowFilter.regexFilter(txtBuscar.getText(), 0, 1);
            sorter.setRowFilter(filter);


            tablaPaciente.getSelectionModel().addSelectionInterval(0,0);
            Buscar();
            PasarACampos();
        }
    }

    @Override
    public void Buscar() {
        tablaPaciente.setSelectionBackground(Color.PINK);
        tablaPaciente.setSelectionForeground(Color.white);
        paciente = new PacienteDTO();
        if(tablaPaciente.getRowSorter()==null){
            paciente.setIdpaciente((Integer)tablaPaciente.getModel().getValueAt(tablaPaciente.getSelectedRow(), 0));
            paciente.setNombre((String) tablaPaciente.getModel().getValueAt(tablaPaciente.getSelectedRow(), 1));
            paciente.setApellido((String) tablaPaciente.getModel().getValueAt(tablaPaciente.getSelectedRow(), 2));
            paciente.setTelefono((String) tablaPaciente.getModel().getValueAt(tablaPaciente.getSelectedRow(), 3));
            paciente.setDireccion((String) tablaPaciente.getModel().getValueAt(tablaPaciente.getSelectedRow(), 4));
            paciente.setFechaNacimiento((java.util.Date) tablaPaciente.getModel().getValueAt(tablaPaciente.getSelectedRow(), 5));
            paciente.setIdtipoPaciente((Integer) tablaPaciente.getModel().getValueAt(tablaPaciente.getSelectedRow(), 6));
            paciente.setSexo((String) tablaPaciente.getModel().getValueAt(tablaPaciente.getSelectedRow(), 7));
            paciente.setIsActivo((boolean) tablaPaciente.getModel().getValueAt(tablaPaciente.getSelectedRow(), 8));
            paciente.setIsBorrado((boolean) tablaPaciente.getModel().getValueAt(tablaPaciente.getSelectedRow(), 9));

        }else{
            
            int valor = tablaPaciente.convertRowIndexToModel(tablaPaciente.getSelectedRow());
            paciente.setIdpaciente((Integer)tablaPaciente.getModel().getValueAt(valor, 0));
            paciente.setNombre((String) tablaPaciente.getModel().getValueAt(valor, 1));
            paciente.setApellido((String) tablaPaciente.getModel().getValueAt(valor, 2));
            paciente.setTelefono((String) tablaPaciente.getModel().getValueAt(valor, 3));
            paciente.setDireccion((String) tablaPaciente.getModel().getValueAt(valor, 4));
            paciente.setFechaNacimiento((java.util.Date) tablaPaciente.getModel().getValueAt(valor, 5));
            paciente.setIdtipoPaciente((Integer) tablaPaciente.getModel().getValueAt(valor, 6));
            paciente.setSexo((String) tablaPaciente.getModel().getValueAt(valor, 7));
            paciente.setIsActivo((boolean) tablaPaciente.getModel().getValueAt(valor, 8));
            paciente.setIsBorrado((boolean) tablaPaciente.getModel().getValueAt(valor, 9));

        }
        
        //PasarACampos();
    }
    @Override
    public void PasarACampos() {
        
        Paciente pacienteJPA = entityManager.find(Paciente.class, paciente.getIdpaciente());
        lblNombrePaciente.setText(pacienteJPA.getNombre());
        jLabel13.setText("#"+Integer.toString(pacienteJPA.getIdpaciente()));
        lblDireccion.setText("<HTML>"+pacienteJPA.getDireccion()+"</HTML>");
        lblEdad.setText(Utilidades.CalcularEdad(pacienteJPA.getFechaNacimiento()).toString());
        lblSexo.setText(pacienteJPA.getSexo());
        lblTelefono.setText(pacienteJPA.getTelefono());
        mantenimientoAsociado.Show((Object)paciente);
        
        PanelCasoPaciente panel;
        pnCasos.removeAll();
        for (Caso caso : pacienteJPA.getCasoCollection()) {
            panel = new PanelCasoPaciente(caso,entityManager,mantenimientoAsociado);
            
            pnCasos.add(panel);
            panel.setVisible(true);
            panel.show();
        }
        this.revalidate();
        this.repaint();
    }
    @Override
    public void bind(IMantenimiento m) {
         mantenimientoAsociado = m;
         PasarACampos();
    }

    public boolean EnableButtoms(boolean b, Component c){
        btnAgregarFragmento.setEnabled(!b);
        btnReporteDePacientes.setEnabled(!b);
        btnAceptar.setEnabled(b);
        btnCancelar.setEnabled(b);
        btnNuevo.setEnabled(!b);
        btnEditar.setEnabled(!b);
        btnBorrar.setEnabled(!b);
        btnBuscar.setEnabled(!b);
        btnActualizar.setEnabled(!b);
        txtBuscar.setEnabled(!b);
        jButton9.setEnabled(!b);
        jButton10.setEnabled(!b);
        try {
            c.setEnabled(true);
        } catch (Exception e) {
        }
        
        return b;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel PanelMenu;
    private javax.swing.JButton btnAceptar;
    private javax.swing.JButton btnActualizar;
    private javax.swing.JButton btnAgregarFragmento;
    private javax.swing.JButton btnBorrar;
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JToggleButton btnEditar;
    private javax.swing.JButton btnNuevo;
    private javax.swing.JButton btnReporteDePacientes;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JPopupMenu.Separator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JPopupMenu.Separator jSeparator4;
    private javax.swing.JLabel lblDireccion;
    private javax.swing.JLabel lblEdad;
    private javax.swing.JLabel lblNombrePaciente;
    private javax.swing.JLabel lblSexo;
    private javax.swing.JLabel lblTelefono;
    private javax.swing.JPanel pnBotones;
    private javax.swing.JPanel pnBusqueda;
    private javax.swing.JPanel pnCasos;
    private javax.swing.JPanel pnLista;
    private javax.swing.JPanel pnListaPadre;
    private javax.swing.JPanel pnMenuSuperior;
    private javax.swing.JPanel pnView;
    private javax.swing.JPanel pnViewPadre;
    private javax.swing.JTable tablaPaciente;
    private javax.swing.JTextField txtBuscar;
    // End of variables declaration//GEN-END:variables

    @Override//metodo de la interface que manda al panel formulario
    public void mandar(String txt) {
       // jLabel1.setText(txt);
    }
    public DefaultTableModel getModel(List<Paciente> lista){
        DefaultTableModel modelo = new DefaultTableModel(){
            public boolean isCellEditable(int rowIndex, int mColIndex) {
                return false;
            }
        };
        
        modelo.addColumn("Código");        
        modelo.addColumn("Nombre");       
        modelo.addColumn("Apellido");     
        modelo.addColumn("Telefono");
        modelo.addColumn("Direccion");
        modelo.addColumn("FechaNacimiento");
        modelo.addColumn("idTipoPaciente");
        modelo.addColumn("Sexo");
        modelo.addColumn("IsActivo");
        modelo.addColumn("IsBorrado");

        Object[] registro = new Object[10];
        
        Collections.reverse(lista);
        for(Paciente paciente: lista){
               
                    registro[0] = paciente.getIdpaciente();
                    registro[1] = paciente.getNombre();
                    registro[2] = paciente.getApellido();
                    registro[3] = paciente.getTelefono();
                    registro[4] = paciente.getDireccion();
                    registro[5] = paciente.getFechaNacimiento();
                    registro[6] = Short.toUnsignedInt(paciente.getIdtipoPaciente());
                    registro[7] = paciente.getSexo();
                    registro[8] = paciente.getIsActivo();
                    registro[9] = paciente.getIsBorrado();
                    
                modelo.addRow(registro);
               
            } 
        
        return modelo;
    }
    
    public void RedisenarTabla(){
//        tablaPaciente.setTableHeader(null);
        tablaPaciente.removeColumn(tablaPaciente.getColumnModel().getColumn(3));
        tablaPaciente.removeColumn(tablaPaciente.getColumnModel().getColumn(3));
        tablaPaciente.removeColumn(tablaPaciente.getColumnModel().getColumn(3));
        tablaPaciente.removeColumn(tablaPaciente.getColumnModel().getColumn(3));
        tablaPaciente.removeColumn(tablaPaciente.getColumnModel().getColumn(3));
        tablaPaciente.removeColumn(tablaPaciente.getColumnModel().getColumn(3));
        tablaPaciente.removeColumn(tablaPaciente.getColumnModel().getColumn(3));
        tablaPaciente.removeColumn(tablaPaciente.getColumnModel().getColumn(2));
        int tableWidth = tablaPaciente.getWidth();
        tablaPaciente.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        tablaPaciente.getColumnModel().getColumn(0).setPreferredWidth(60);

        tablaPaciente.getColumnModel().getColumn(1).setPreferredWidth(228);
    }

    public void setPacienteSelected(Paciente pacienteSelected) {
        this.pacienteSelected = pacienteSelected;
        TableModel dtm = tablaPaciente.getModel();
        
        for (int i=0; i<dtm.getRowCount(); i++) {
            int id = (int) dtm.getValueAt(i, 0);
            if(id == pacienteSelected.getIdpaciente()){
                this.pacienteSelected = pacienteSelected;
                tablaPaciente.getSelectionModel().clearSelection();
                tablaPaciente.getSelectionModel().addSelectionInterval(i,i);
                Buscar();
                PasarACampos();
            }
        }
    }
}

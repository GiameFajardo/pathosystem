/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.itla.apppatologia.vista.viewers;

import java.awt.Color;
import java.awt.Component;
import java.util.Collections;
import java.util.List;
import javax.persistence.EntityManager;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTable;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;
import org.itla.apppatologia.DTO.FragmentoDTO;
import org.itla.apppatologia.Repository.Fragmento;
import org.itla.apppatologia.modelo.Contexto;
import org.itla.apppatologia.modelo.PersistenceUnits;
import org.itla.apppatologia.utilidades.GenerarReporte;
import org.itla.apppatologia.vista.mantenimientos.IMantenimiento;
import org.itla.apppatologia.vista.mantenimientos.PanelEstudio;
import org.itla.apppatologia.vista.mantenimientos.PanelPaciente;

/**
 *
 * @author Giame
 */
public class ViewerFragmento extends javax.swing.JPanel implements IViewerObservable{

    EntityManager entityManager;
    Contexto context;
    private List<Fragmento> fragmentos;
    private FragmentoDTO fragmento;
    private Fragmento fragmentoSelected;
    //private JList<Aseguradora> lista = new JList<Aseguradora>();
    /**
     * Creates new form ViewerARS
     */
    IMantenimiento mantenimientoAsociado;
    public ViewerFragmento() {
        initComponents();
        
        
        
        context = new  Contexto();
        entityManager = context.getEntityManager(PersistenceUnits.getLocalContext());
        
        fragmentos = entityManager.createNamedQuery("Fragmentos.findAll").getResultList();
        
        
        tablaFragmentos.setModel(getModel(fragmentos));
        
        RedisenarTabla();
        
        String txtCantidadPacientes = "<html>El"+"% de los pacientes están afiliados a esta aseguradora. Con un total de"+" pacienetes.</html>";
        String txtFechaPrimerPacientes = "<html>El primer paciente con esta aseguradora fue registrado el día</html>";
        String txtFechaUltimoPacientes = "<html>El ultimo paciente con esta aseguradora fue registrado el día</html>";
//        jLabel9.setText(txtFechaPrimerPacientes);
//        jLabel10.setText(txtFechaUltimoPacientes);
//        jLabel6.setText(txtCantidadPacientes);
        
        tablaFragmentos.getSelectionModel().addSelectionInterval(0,0);
        Buscar();
    }
    public ViewerFragmento(EntityManager em) {
        initComponents();
        
        entityManager=em;
//        context = new  Contexto();
//        entityManager = context.getEntityManager(PersistenceUnits.getLocalContext());
        
        fragmentos = entityManager.createNamedQuery("Fragmento.findAll").getResultList();
        
        
        tablaFragmentos.setModel(getModel(fragmentos));
        
        RedisenarTabla();
        
        String txtCantidadPacientes = "<html>El"+"% de los pacientes están afiliados a esta aseguradora. Con un total de"+" pacienetes.</html>";
        String txtFechaPrimerPacientes = "<html>El primer paciente con esta aseguradora fue registrado el día</html>";
        String txtFechaUltimoPacientes = "<html>El ultimo paciente con esta aseguradora fue registrado el día</html>";
//        jLabel9.setText(txtFechaPrimerPacientes);
//        jLabel10.setText(txtFechaUltimoPacientes);
//        jLabel6.setText(txtCantidadPacientes);
        
        tablaFragmentos.getSelectionModel().addSelectionInterval(0,0);
        Buscar();
        EnableButtoms(false,null);
    }

    public void ShowFragmento(Fragmento frag){
        
    }
    @Override
    public String getName(){
        return "fragmento";
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenu1 = new javax.swing.JPopupMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jSeparator4 = new javax.swing.JPopupMenu.Separator();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jSeparator5 = new javax.swing.JPopupMenu.Separator();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenuItem5 = new javax.swing.JMenuItem();
        pnListaPadre = new javax.swing.JPanel();
        pnBusqueda = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        btnNuevo = new javax.swing.JButton();
        btnEditar = new javax.swing.JToggleButton();
        btnBorrar = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        txtBuscar = new javax.swing.JTextField();
        btnBuscar = new javax.swing.JButton();
        btnActualizar = new javax.swing.JButton();
        pnLista = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tablaFragmentos = new javax.swing.JTable();
        pnViewPadre = new javax.swing.JPanel();
        pnView = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jPanel2 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        lblNombreARS = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jPanel9 = new javax.swing.JPanel();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel19 = new javax.swing.JLabel();
        lblTipo = new javax.swing.JLabel();
        lblEstado = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        btnPaciente = new javax.swing.JButton();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        btnMedico = new javax.swing.JButton();
        jLabel18 = new javax.swing.JLabel();
        btnPatologo = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        jSeparator3 = new javax.swing.JSeparator();
        jPanel8 = new javax.swing.JPanel();
        pnBotones = new javax.swing.JPanel();
        PanelMenu = new javax.swing.JPanel();
        pnMenuSuperior = new javax.swing.JPanel();
        btnAceptar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        btnIniciarEstudio = new javax.swing.JButton();
        btnReporteDeCasos = new javax.swing.JButton();
        btnReporteDeFragmentos = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();

        jPopupMenu1.setBackground(new java.awt.Color(225, 212, 212));
        jPopupMenu1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jMenuItem1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/itla/apppatologia/vista/PNG/botones/biologia (3).png"))); // NOI18N
        jMenuItem1.setText("Iniciar estudio");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jPopupMenu1.add(jMenuItem1);
        jPopupMenu1.add(jSeparator4);

        jMenuItem3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/itla/apppatologia/vista/PNG/persistencia/lapiz.png"))); // NOI18N
        jMenuItem3.setText("Editar");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jPopupMenu1.add(jMenuItem3);

        jMenuItem2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/itla/apppatologia/vista/PNG/persistencia/goma-de-borrar.png"))); // NOI18N
        jMenuItem2.setText("Borrar");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jPopupMenu1.add(jMenuItem2);
        jPopupMenu1.add(jSeparator5);

        jMenu1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/itla/apppatologia/vista/PNG/persistencia/copia.png"))); // NOI18N
        jMenu1.setText("Copiar");

        jMenuItem4.setText("Nombre");
        jMenu1.add(jMenuItem4);

        jMenuItem5.setText("Paciente");
        jMenu1.add(jMenuItem5);

        jPopupMenu1.add(jMenu1);

        setBackground(new java.awt.Color(255, 102, 255));
        setMinimumSize(new java.awt.Dimension(300, 660));
        setLayout(new java.awt.BorderLayout());

        pnListaPadre.setPreferredSize(new java.awt.Dimension(294, 370));
        pnListaPadre.setLayout(new javax.swing.BoxLayout(pnListaPadre, javax.swing.BoxLayout.Y_AXIS));

        pnBusqueda.setPreferredSize(new java.awt.Dimension(150, 80));
        pnBusqueda.setLayout(new java.awt.GridLayout(2, 0));

        jPanel5.setLayout(new javax.swing.BoxLayout(jPanel5, javax.swing.BoxLayout.LINE_AXIS));

        btnNuevo.setBackground(new java.awt.Color(255, 230, 255));
        btnNuevo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/itla/apppatologia/vista/PNG/botones/anadir (1).png"))); // NOI18N
        btnNuevo.setText("Nuevo");
        btnNuevo.setToolTipText("Crear nuevo fragmento.");
        btnNuevo.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnNuevo.setPreferredSize(new java.awt.Dimension(91, 44));
        btnNuevo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnNuevoMouseClicked(evt);
            }
        });
        btnNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoActionPerformed(evt);
            }
        });
        jPanel5.add(btnNuevo);

        btnEditar.setBackground(new java.awt.Color(255, 230, 255));
        btnEditar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/itla/apppatologia/vista/PNG/persistencia/lapiz.png"))); // NOI18N
        btnEditar.setText("Editar");
        btnEditar.setToolTipText("Editar fragmento seleccionado.");
        btnEditar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnEditar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnEditarMouseClicked(evt);
            }
        });
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });
        jPanel5.add(btnEditar);

        btnBorrar.setBackground(new java.awt.Color(255, 230, 255));
        btnBorrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/itla/apppatologia/vista/PNG/persistencia/goma-de-borrar.png"))); // NOI18N
        btnBorrar.setText("Borrar");
        btnBorrar.setToolTipText("Borrar fragmento seleccionado.");
        btnBorrar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnBorrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBorrarActionPerformed(evt);
            }
        });
        jPanel5.add(btnBorrar);

        pnBusqueda.add(jPanel5);

        jPanel4.setLayout(new javax.swing.BoxLayout(jPanel4, javax.swing.BoxLayout.LINE_AXIS));

        txtBuscar.setPreferredSize(new java.awt.Dimension(50, 28));
        txtBuscar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtBuscarKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtBuscarKeyReleased(evt);
            }
        });
        jPanel4.add(txtBuscar);

        btnBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/itla/apppatologia/vista/PNG/persistencia/busqueda.png"))); // NOI18N
        btnBuscar.setToolTipText("Buscar fragmento en la lista.");
        btnBuscar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });
        jPanel4.add(btnBuscar);

        btnActualizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/itla/apppatologia/vista/PNG/persistencia/flechas-actualizar.png"))); // NOI18N
        btnActualizar.setToolTipText("Actualizar lista de fragmentos.");
        btnActualizar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarActionPerformed(evt);
            }
        });
        jPanel4.add(btnActualizar);

        pnBusqueda.add(jPanel4);

        pnListaPadre.add(pnBusqueda);

        pnLista.setLayout(new java.awt.BorderLayout());

        tablaFragmentos.setFont(new java.awt.Font("sansserif", 1, 16)); // NOI18N
        tablaFragmentos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tablaFragmentos.setRowHeight(30);
        tablaFragmentos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tablaFragmentosMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tablaFragmentosMouseReleased(evt);
            }
        });
        tablaFragmentos.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tablaFragmentosKeyReleased(evt);
            }
        });
        jScrollPane2.setViewportView(tablaFragmentos);

        pnLista.add(jScrollPane2, java.awt.BorderLayout.CENTER);

        pnListaPadre.add(pnLista);

        add(pnListaPadre, java.awt.BorderLayout.LINE_START);

        pnViewPadre.setBackground(new java.awt.Color(255, 255, 255));
        pnViewPadre.setBorder(null);
        pnViewPadre.setLayout(new java.awt.BorderLayout());

        pnView.setBackground(new java.awt.Color(255, 255, 255));
        pnView.setBorder(null);
        pnView.setForeground(new java.awt.Color(255, 255, 255));
        pnView.setLayout(new java.awt.BorderLayout());

        jScrollPane3.setBackground(new java.awt.Color(255, 255, 255));
        jScrollPane3.setBorder(null);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setPreferredSize(new java.awt.Dimension(300, 600));
        jPanel2.setLayout(new java.awt.BorderLayout());

        jPanel6.setBackground(new java.awt.Color(255, 245, 255));
        jPanel6.setPreferredSize(new java.awt.Dimension(430, 1241));

        lblNombreARS.setFont(new java.awt.Font("sansserif", 2, 26)); // NOI18N
        lblNombreARS.setText("nombre ARS");

        jLabel13.setFont(new java.awt.Font("sansserif", 1, 24)); // NOI18N
        jLabel13.setText("Fragmento");

        jPanel9.setBackground(new java.awt.Color(255, 251, 251));

        jLabel19.setFont(new java.awt.Font("sansserif", 1, 16)); // NOI18N
        jLabel19.setText("Tipo:");

        lblTipo.setFont(new java.awt.Font("sansserif", 0, 16)); // NOI18N
        lblTipo.setText("Paciente:");

        lblEstado.setFont(new java.awt.Font("sansserif", 0, 16)); // NOI18N
        lblEstado.setText("Paciente:");

        jLabel20.setFont(new java.awt.Font("sansserif", 1, 16)); // NOI18N
        jLabel20.setText("Estado:");

        jPanel1.setBackground(new java.awt.Color(255, 251, 251));

        btnPaciente.setBackground(new java.awt.Color(255, 230, 255));
        btnPaciente.setFont(new java.awt.Font("sansserif", 0, 16)); // NOI18N
        btnPaciente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/itla/apppatologia/vista/PNG/botones/bata-de-paciente (1).png"))); // NOI18N
        btnPaciente.setText("Ver");
        btnPaciente.setToolTipText("Ver paciente.");
        btnPaciente.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnPaciente.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnPaciente.setPreferredSize(new java.awt.Dimension(91, 44));
        btnPaciente.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnPacienteMouseClicked(evt);
            }
        });
        btnPaciente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPacienteActionPerformed(evt);
            }
        });

        jLabel16.setFont(new java.awt.Font("sansserif", 1, 16)); // NOI18N
        jLabel16.setText("Paciente:");

        jLabel17.setFont(new java.awt.Font("sansserif", 1, 16)); // NOI18N
        jLabel17.setText("Médico:");

        btnMedico.setBackground(new java.awt.Color(255, 230, 255));
        btnMedico.setFont(new java.awt.Font("sansserif", 0, 16)); // NOI18N
        btnMedico.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/itla/apppatologia/vista/PNG/botones/doctor.png"))); // NOI18N
        btnMedico.setText("Ver");
        btnMedico.setToolTipText("Ver médico.");
        btnMedico.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnMedico.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnMedico.setPreferredSize(new java.awt.Dimension(91, 44));
        btnMedico.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnMedicoMouseClicked(evt);
            }
        });
        btnMedico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMedicoActionPerformed(evt);
            }
        });

        jLabel18.setFont(new java.awt.Font("sansserif", 1, 16)); // NOI18N
        jLabel18.setText("Patólogo");

        btnPatologo.setBackground(new java.awt.Color(255, 230, 255));
        btnPatologo.setFont(new java.awt.Font("sansserif", 0, 16)); // NOI18N
        btnPatologo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/itla/apppatologia/vista/PNG/botones/cientifico.png"))); // NOI18N
        btnPatologo.setText("Ver");
        btnPatologo.setToolTipText("Ver patólogo encargado del caso.");
        btnPatologo.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnPatologo.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnPatologo.setPreferredSize(new java.awt.Dimension(91, 44));
        btnPatologo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnPatologoMouseClicked(evt);
            }
        });
        btnPatologo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPatologoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnPaciente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnMedico, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnPatologo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel17)
                            .addComponent(jLabel18)
                            .addComponent(jLabel16))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel16)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnPaciente, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel17)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnMedico, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel18)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnPatologo, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1)
            .addComponent(jSeparator2)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel19))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(lblTipo, javax.swing.GroupLayout.PREFERRED_SIZE, 320, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel20)
                            .addGroup(jPanel9Layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(lblEstado, javax.swing.GroupLayout.PREFERRED_SIZE, 320, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(56, Short.MAX_VALUE))
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel19)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblTipo)
                .addGap(18, 18, 18)
                .addComponent(jLabel20)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblEstado)
                .addGap(35, 35, 35)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 5, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(42, 42, 42))
        );

        jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/itla/apppatologia/vista/PNG/principales/radiacion.png"))); // NOI18N

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel11)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel13)
                            .addComponent(lblNombreARS)))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(21, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel11)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel13)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblNombreARS)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel2.add(jPanel6, java.awt.BorderLayout.LINE_START);

        jPanel7.setLayout(new java.awt.BorderLayout());

        jSeparator3.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jPanel7.add(jSeparator3, java.awt.BorderLayout.LINE_START);

        jPanel8.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 67, Short.MAX_VALUE)
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 654, Short.MAX_VALUE)
        );

        jPanel7.add(jPanel8, java.awt.BorderLayout.CENTER);

        jPanel2.add(jPanel7, java.awt.BorderLayout.CENTER);

        jScrollPane3.setViewportView(jPanel2);

        pnView.add(jScrollPane3, java.awt.BorderLayout.CENTER);

        pnViewPadre.add(pnView, java.awt.BorderLayout.CENTER);

        pnBotones.setLayout(new java.awt.BorderLayout());

        PanelMenu.setBackground(new java.awt.Color(255, 252, 236));
        PanelMenu.setBorder(null);
        PanelMenu.setPreferredSize(new java.awt.Dimension(85, 356));
        PanelMenu.setLayout(new java.awt.GridLayout(0, 1));

        pnMenuSuperior.setBackground(new java.awt.Color(255, 255, 255));
        pnMenuSuperior.setPreferredSize(new java.awt.Dimension(70, 170));
        pnMenuSuperior.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                pnMenuSuperiorMouseDragged(evt);
            }
        });
        pnMenuSuperior.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                pnMenuSuperiorMousePressed(evt);
            }
        });
        pnMenuSuperior.setLayout(new java.awt.GridLayout(2, 0));

        btnAceptar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/itla/apppatologia/vista/PNG/persistencia/comprobado.png"))); // NOI18N
        btnAceptar.setToolTipText("Aceptar");
        btnAceptar.setContentAreaFilled(false);
        btnAceptar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnAceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAceptarActionPerformed(evt);
            }
        });
        pnMenuSuperior.add(btnAceptar);

        btnCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/itla/apppatologia/vista/PNG/persistencia/desenfrenado.png"))); // NOI18N
        btnCancelar.setToolTipText("Cacelar");
        btnCancelar.setContentAreaFilled(false);
        btnCancelar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });
        pnMenuSuperior.add(btnCancelar);

        PanelMenu.add(pnMenuSuperior);

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 85, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 110, Short.MAX_VALUE)
        );

        PanelMenu.add(jPanel3);

        btnIniciarEstudio.setBackground(new java.awt.Color(255, 235, 255));
        btnIniciarEstudio.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/itla/apppatologia/vista/PNG/botones/biologia (2).png"))); // NOI18N
        btnIniciarEstudio.setText("<html><p align=\"center\">Iniciar estudio</p></html>");
        btnIniciarEstudio.setToolTipText("Iniciar estudio al fragmento seleccionado.");
        btnIniciarEstudio.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnIniciarEstudio.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnIniciarEstudio.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnIniciarEstudio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIniciarEstudioActionPerformed(evt);
            }
        });
        PanelMenu.add(btnIniciarEstudio);

        btnReporteDeCasos.setBackground(new java.awt.Color(255, 235, 255));
        btnReporteDeCasos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/itla/apppatologia/vista/PNG/circulos/reportar (1).png"))); // NOI18N
        btnReporteDeCasos.setText("<html><p ALIGN=center>Reporte de casos</p></html>");
        btnReporteDeCasos.setToolTipText("Ejecutar reporte de casos. \"Muestra todos los casos con algunos detralles\".");
        btnReporteDeCasos.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnReporteDeCasos.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnReporteDeCasos.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnReporteDeCasos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReporteDeCasosActionPerformed(evt);
            }
        });
        PanelMenu.add(btnReporteDeCasos);

        btnReporteDeFragmentos.setBackground(new java.awt.Color(255, 235, 255));
        btnReporteDeFragmentos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/itla/apppatologia/vista/PNG/circulos/reportar (1).png"))); // NOI18N
        btnReporteDeFragmentos.setText("<html><p ALIGN=center>Reporte de fragmentos</p></html>");
        btnReporteDeFragmentos.setToolTipText("Ejecuta reporte de fragmentos. \"Muestra todos las fragmentos y el estado del caso de forma redactada.\"");
        btnReporteDeFragmentos.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnReporteDeFragmentos.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnReporteDeFragmentos.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnReporteDeFragmentos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReporteDeFragmentosActionPerformed(evt);
            }
        });
        PanelMenu.add(btnReporteDeFragmentos);

        jButton9.setBackground(new java.awt.Color(255, 235, 255));
        jButton9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/itla/apppatologia/vista/PNG/botones/cancelar (3).png"))); // NOI18N
        jButton9.setText("<html><p ALIGN=center>sin implementar</p></html>");
        jButton9.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton9.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton9.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        PanelMenu.add(jButton9);

        pnBotones.add(PanelMenu, java.awt.BorderLayout.LINE_START);

        pnViewPadre.add(pnBotones, java.awt.BorderLayout.LINE_END);

        add(pnViewPadre, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void pnMenuSuperiorMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnMenuSuperiorMouseDragged
//        Point point = MouseInfo.getPointerInfo().getLocation();
//
//        this.setLocation(point.x-x,point.y-y);
    }//GEN-LAST:event_pnMenuSuperiorMouseDragged

    private void pnMenuSuperiorMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnMenuSuperiorMousePressed
//        x = evt.getX();
//        y = evt.getY();
    }//GEN-LAST:event_pnMenuSuperiorMousePressed

    private void tablaFragmentosMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaFragmentosMousePressed
//        tablaFragmentos.setSelectionBackground(Color.PINK);
//        tablaFragmentos.setSelectionForeground(Color.white);
        Buscar();
        PasarACampos();
        
        
//        fragmento = new FragmentoDTO();
//        fragmento.setId((Integer)tablaFragmentos.getModel().getValueAt(tablaFragmentos.getSelectedRow(), 0));
//        fragmento.setFecha((java.util.Date) tablaFragmentos.getModel().getValueAt(tablaFragmentos.getSelectedRow(), 1));
//        fragmento.setOrigen((String) tablaFragmentos.getModel().getValueAt(tablaFragmentos.getSelectedRow(), 2));
//        fragmento.setForma((String) tablaFragmentos.getModel().getValueAt(tablaFragmentos.getSelectedRow(), 3));
//        fragmento.setEstructura((String) tablaFragmentos.getModel().getValueAt(tablaFragmentos.getSelectedRow(), 4));
//        fragmento.setPero((String) tablaFragmentos.getModel().getValueAt(tablaFragmentos.getSelectedRow(), 5));
//        fragmento.setColor((String) tablaFragmentos.getModel().getValueAt(tablaFragmentos.getSelectedRow(), 6));
//        fragmento.setDimencion((String) tablaFragmentos.getModel().getValueAt(tablaFragmentos.getSelectedRow(), 7));
//        fragmento.setDescripcion((String) tablaFragmentos.getModel().getValueAt(tablaFragmentos.getSelectedRow(), 8));
//        fragmento.setDiagnostico((String) tablaFragmentos.getModel().getValueAt(tablaFragmentos.getSelectedRow(), 9));
//        fragmento.setIdFrasco((Integer) tablaFragmentos.getModel().getValueAt(tablaFragmentos.getSelectedRow(), 10));
//        fragmento.setIdMedico((Integer) tablaFragmentos.getModel().getValueAt(tablaFragmentos.getSelectedRow(), 11));
//        fragmento.setIdEstado((Integer) tablaFragmentos.getModel().getValueAt(tablaFragmentos.getSelectedRow(), 12));
//        fragmento.setIdTipo((Integer) tablaFragmentos.getModel().getValueAt(tablaFragmentos.getSelectedRow(), 13));
//        fragmento.setIsActivo((boolean) tablaFragmentos.getModel().getValueAt(tablaFragmentos.getSelectedRow(), 14));
//        
        
//        fragmento.setTelefono((String)tablaFragmentos.getModel().getValueAt(tablaFragmentos.getSelectedRow(), 2));
//        fragmento.setDirecion((String)tablaFragmentos.getModel().getValueAt(tablaFragmentos.getSelectedRow(), 3));
        
        lblNombreARS.setText("#"+Integer.toString(fragmento.getId()));
//        jLabel3.setText(fragmento.getTelefono());
//        jLabel5.setText(fragmento.getDirecion());
        
        mantenimientoAsociado.Show((Object)fragmento);
    }//GEN-LAST:event_tablaFragmentosMousePressed

    private void btnAceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAceptarActionPerformed
        Fragmento frag = ((Fragmento)mantenimientoAsociado.Save());
        try {
            entityManager.refresh(fragmentoSelected);
        } catch (Exception e) {
        }
        
//        if (ars.getId()>0) {
//            tablaFragmentos.getModel().setValueAt(ars.getNombre(), tablaFragmentos.getSelectedRow(), 1);
//        }
        fragmentos = entityManager.createNamedQuery("Fragmento.findAll").getResultList();
        tablaFragmentos.setModel(getModel(fragmentos));
        RedisenarTabla();
        EnableButtoms(false,null);
        mantenimientoAsociado.MandarSizePadre(0);
        if(btnEditar.isSelected()){
            btnEditar.setSelected(false);
        }
        setFragmentoSelected(frag);
//        tablaFragmentos.getModel().setValueAt(, WIDTH, WIDTH);getValueAt(tablaFragmentos.getSelectedRow(), 1);
//        List<Aseguradora> newAseguradoras;
//        newAseguradoras = entityManager.createNamedQuery("Aseguradora.findAll").getResultList();
//        tablaFragmentos.setModel(getModel(newAseguradoras));
//        RedisenarTabla();
    }//GEN-LAST:event_btnAceptarActionPerformed

    private void txtBuscarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscarKeyPressed
//        DefaultTableModel model = (DefaultTableModel) tablaFragmentos.getModel();
//        DefaultTableModel newModel = new DefaultTableModel();
//        
//        Object[] registro = new Object[4];
//        
//        for (int i = 0; i < model.getRowCount(); i++) {
//            if (model.getValueAt(i, 1).toString().contains(jTextField1.getText().subSequence(0, 1))) {
//                registro[0] = model.getValueAt(i, 0);
//                registro[1] = model.getValueAt(i, 1);
//                registro[2] = model.getValueAt(i, 2);
//                registro[3] = model.getValueAt(i, 3);
//                
//                newModel.addRow(registro);
//            }
//            
//        }
//        tablaFragmentos.setModel(newModel);
    }//GEN-LAST:event_txtBuscarKeyPressed

    private void btnActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarActionPerformed
        fragmentos = entityManager.createNamedQuery("Fragmento.findAll").getResultList();
        
        tablaFragmentos.setModel(getModel(fragmentos));
        
        RedisenarTabla();
//        mantenimientoAsociado.MandarSizePadre(1080);
        Filtar();
        tablaFragmentos.getSelectionModel().addSelectionInterval(0,0);
//        Buscar();
//        PasarACampos();
        setFragmentoSelected(entityManager.find(Fragmento.class, fragmento.getId()));
    }//GEN-LAST:event_btnActualizarActionPerformed

    private void btnIniciarEstudioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIniciarEstudioActionPerformed
       
        if(fragmento!=null){
            Fragmento fragmentoJPA = entityManager.find(Fragmento.class, fragmento.getId());
            if(fragmentoJPA.getEstudio()==null){
                JPanel pnForm = new PanelEstudio(fragmento);
        //          MainFrame padre = (MainFrame)observador;
                    
                    JPanel pnViewer = new ViewerEstudio(entityManager);
                    mantenimientoAsociado.CargarMantenimiento(pnViewer, pnForm,  true);
                    mantenimientoAsociado.MandarSizePadre(1148);
                    ((ViewerEstudio)pnViewer).EnableButtoms(true, null);
            }else{
                JOptionPane.showMessageDialog(null, "El fragmento ya tiene un estudio asignado.");
        
            }
        }else{
            JOptionPane.showMessageDialog(null, "Seleccione un fragmento para proceder.");
        }
            
    }//GEN-LAST:event_btnIniciarEstudioActionPerformed

    private void txtBuscarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscarKeyReleased
        Filtar();
        if(evt.getKeyCode()==40){
            tablaFragmentos.requestFocus();
        }
    }//GEN-LAST:event_txtBuscarKeyReleased

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        Filtar();
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void btnEditarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnEditarMouseClicked
        
        if(btnEditar.isSelected()){
            mantenimientoAsociado.CanModify(true);
            mantenimientoAsociado.MandarSizePadre(1148);
        }else{
            mantenimientoAsociado.CanModify(false);
            mantenimientoAsociado.MandarSizePadre(0);
        }
        EnableButtoms(btnEditar.isSelected(),btnEditar);
    }//GEN-LAST:event_btnEditarMouseClicked

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnEditarActionPerformed

    private void tablaFragmentosKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tablaFragmentosKeyReleased
        if(evt.getKeyCode()==40||evt.getKeyCode()==38){
            tablaFragmentos.setSelectionBackground(Color.PINK);
            tablaFragmentos.setSelectionForeground(Color.white);
        
            Buscar();
            PasarACampos();  
        }else{
            if(evt.getKeyCode()==127){
                if(mantenimientoAsociado.Borrar()){
            
                    fragmentos = entityManager.createNamedQuery("Fragmento.findAll").getResultList();
                    tablaFragmentos.setModel(getModel(fragmentos));
                    RedisenarTabla();
                    tablaFragmentos.getSelectionModel().addSelectionInterval(0,0);
                    Buscar();
                    PasarACampos();
                }
            }
        }
        
    }//GEN-LAST:event_tablaFragmentosKeyReleased

    private void btnBorrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBorrarActionPerformed
        if(mantenimientoAsociado.Borrar()){
            
            fragmentos = entityManager.createNamedQuery("Fragmento.findAll").getResultList();
            tablaFragmentos.setModel(getModel(fragmentos));
            RedisenarTabla();
            tablaFragmentos.getSelectionModel().addSelectionInterval(0,0);
            Buscar();
            PasarACampos();
        }
    }//GEN-LAST:event_btnBorrarActionPerformed

    private void btnReporteDeCasosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReporteDeCasosActionPerformed
        GenerarReporte.Casos();
    }//GEN-LAST:event_btnReporteDeCasosActionPerformed

    private void btnReporteDeFragmentosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReporteDeFragmentosActionPerformed
        GenerarReporte.Fragmentos();
    }//GEN-LAST:event_btnReporteDeFragmentosActionPerformed

    private void btnNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnNuevoActionPerformed

    private void btnNuevoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnNuevoMouseClicked
        EnableButtoms(true, btnNuevo);
        mantenimientoAsociado.CanModify(true);
        mantenimientoAsociado.MandarSizePadre(1148);
        mantenimientoAsociado.Clean();
       
    }//GEN-LAST:event_btnNuevoMouseClicked

    private void btnPacienteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnPacienteMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_btnPacienteMouseClicked

    private void btnPacienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPacienteActionPerformed
        JPanel pnFrm = new PanelPaciente();
        JPanel pnView = new ViewerPaciente(entityManager);
        mantenimientoAsociado.CargarMantenimiento(pnView, pnFrm, true);
        mantenimientoAsociado.MandarSizePadre(0);  
        
        Fragmento frag = entityManager.find(Fragmento.class, fragmento.getId());
        ((ViewerPaciente)pnView).setPacienteSelected(frag.getIdfrascoFrasco().getIdpacientePaciente());
        
    }//GEN-LAST:event_btnPacienteActionPerformed

    private void btnMedicoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnMedicoMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_btnMedicoMouseClicked

    private void btnMedicoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMedicoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnMedicoActionPerformed

    private void btnPatologoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnPatologoMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_btnPatologoMouseClicked

    private void btnPatologoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPatologoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnPatologoActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed

        if(fragmento!=null){
            Fragmento fragmentoJPA = entityManager.find(Fragmento.class, fragmento.getId());
            if(fragmentoJPA.getEstudio()==null){
                JPanel pnForm = new PanelEstudio(fragmento);
        //          MainFrame padre = (MainFrame)observador;

                    JPanel pnViewer = new ViewerEstudio(entityManager);
                    mantenimientoAsociado.CargarMantenimiento(pnViewer, pnForm,  true);
                    mantenimientoAsociado.MandarSizePadre(1148);
                
            }else{
                JOptionPane.showMessageDialog(null, "El fragmento ya tiene un estudio asignado.");
        
            }
        }else{
            JOptionPane.showMessageDialog(null, "Seleccione un fragmento para proceder.");
        }
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        btnEditar.setSelected(!btnEditar.isSelected());
        
        if(btnEditar.isSelected()){
            mantenimientoAsociado.CanModify(true);
            mantenimientoAsociado.MandarSizePadre(1148);
        }else{
            mantenimientoAsociado.CanModify(false);
            mantenimientoAsociado.MandarSizePadre(0);
        }
        EnableButtoms(btnEditar.isSelected(),btnEditar);
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed

        if(mantenimientoAsociado.Borrar()){
            
            fragmentos = entityManager.createNamedQuery("Fragmento.findAll").getResultList();
            tablaFragmentos.setModel(getModel(fragmentos));
            RedisenarTabla();
            tablaFragmentos.getSelectionModel().addSelectionInterval(0,0);
            Buscar();
            PasarACampos();
        }
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void tablaFragmentosMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaFragmentosMouseReleased
        int row = tablaFragmentos.rowAtPoint(evt.getPoint());
        tablaFragmentos.getSelectionModel().clearSelection();
        tablaFragmentos.getSelectionModel().setSelectionInterval(row, row);
        Buscar();
        PasarACampos();        
        if(evt.isPopupTrigger()){
            jPopupMenu1.show(this.tablaFragmentos,evt.getX(),evt.getY());
        }
    }//GEN-LAST:event_tablaFragmentosMouseReleased

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        EnableButtoms(false,null);
        btnEditar.setSelected(false);
        mantenimientoAsociado.CanModify(false);
        mantenimientoAsociado.MandarSizePadre(0);
    }//GEN-LAST:event_btnCancelarActionPerformed

    public boolean EnableButtoms(boolean b, Component c){
        btnIniciarEstudio.setEnabled(!b);
        btnReporteDeCasos.setEnabled(!b);
        btnReporteDeFragmentos.setEnabled(!b);
        btnAceptar.setEnabled(b);
        btnCancelar.setEnabled(b);
        btnNuevo.setEnabled(!b);
        btnEditar.setEnabled(!b);
        btnBorrar.setEnabled(!b);
        btnBuscar.setEnabled(!b);
        btnActualizar.setEnabled(!b);
        txtBuscar.setEnabled(!b);
        jButton9.setEnabled(!b);
        btnActualizar.setEnabled(!b);
        try {
            c.setEnabled(true);
        } catch (Exception e) {
        }
        
        return b;
    }
    @Override
    public void bind(IMantenimiento m) {
         mantenimientoAsociado = m;
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel PanelMenu;
    private javax.swing.JButton btnAceptar;
    private javax.swing.JButton btnActualizar;
    private javax.swing.JButton btnBorrar;
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JToggleButton btnEditar;
    private javax.swing.JButton btnIniciarEstudio;
    private javax.swing.JButton btnMedico;
    private javax.swing.JButton btnNuevo;
    private javax.swing.JButton btnPaciente;
    private javax.swing.JButton btnPatologo;
    private javax.swing.JButton btnReporteDeCasos;
    private javax.swing.JButton btnReporteDeFragmentos;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JPopupMenu.Separator jSeparator4;
    private javax.swing.JPopupMenu.Separator jSeparator5;
    private javax.swing.JLabel lblEstado;
    private javax.swing.JLabel lblNombreARS;
    private javax.swing.JLabel lblTipo;
    private javax.swing.JPanel pnBotones;
    private javax.swing.JPanel pnBusqueda;
    private javax.swing.JPanel pnLista;
    private javax.swing.JPanel pnListaPadre;
    private javax.swing.JPanel pnMenuSuperior;
    private javax.swing.JPanel pnView;
    private javax.swing.JPanel pnViewPadre;
    private javax.swing.JTable tablaFragmentos;
    private javax.swing.JTextField txtBuscar;
    // End of variables declaration//GEN-END:variables

    @Override//metodo de la interface que manda al panel formulario
    public void mandar(String txt) {
       // jLabel1.setText(txt);
    }
    public DefaultTableModel getModel(List<Fragmento> lista){
        DefaultTableModel modelo = new DefaultTableModel(){
            public boolean isCellEditable(int rowIndex, int mColIndex) {
            return false;
      }
        };
        
        modelo.addColumn("Código");        
        modelo.addColumn("Fecha");       
        modelo.addColumn("Origen");     
        modelo.addColumn("Forma");
        modelo.addColumn("Estructura");
        modelo.addColumn("Peso");
        modelo.addColumn("Color");
        modelo.addColumn("Dimencion");
        modelo.addColumn("Desccripcion");
        modelo.addColumn("Diagnostico");
        modelo.addColumn("idFrasco");
        modelo.addColumn("idMedico");
        modelo.addColumn("idEstado");
        modelo.addColumn("idTipo");
        modelo.addColumn("Tipo");
        modelo.addColumn("isActivo");
        modelo.addColumn("Estado");

        Object[] registro = new Object[17];
        
        Collections.reverse(lista);
        for(Fragmento fragmento: lista){
               
                    registro[0] = fragmento.getIdfragmento();
                    registro[1] = fragmento.getFecha();
                    registro[2] = fragmento.getOrigen();
                    registro[3] = fragmento.getForma();
                    registro[4] = fragmento.getEstructura();
                    registro[5] = fragmento.getPeso();
                    registro[6] = fragmento.getColor();
                    registro[7] = fragmento.getDimension();
                    registro[8] = fragmento.getDescripcion();
                    registro[9] = fragmento.getDiagnostico();
                    registro[10] = fragmento.getIdfrascoFrasco().getIdfrasco();
                    registro[11] = fragmento.getIdmedicoMedico().getIdmedico();
                    registro[12] = fragmento.getIdestadoFragmentoEstadoFragmento().getIdestadoFragmento();
                    
                    registro[13] = fragmento.getIdtipoFragmentoTipoFragmento().getIdtipoFragmento();
                    registro[14] = fragmento.getIdtipoFragmentoTipoFragmento().getNombre();
                    registro[15] = fragmento.getIsActivo();
                    registro[16] = fragmento.getIdestadoFragmentoEstadoFragmento().getNombre();
                modelo.addRow(registro);
               
            } 
        
        return modelo;
    }
    
    public void RedisenarTabla(){
//        tablaFragmentos.setTableHeader(null);
        tablaFragmentos.removeColumn(tablaFragmentos.getColumnModel().getColumn(2));
        tablaFragmentos.removeColumn(tablaFragmentos.getColumnModel().getColumn(1));
        tablaFragmentos.removeColumn(tablaFragmentos.getColumnModel().getColumn(3));
        tablaFragmentos.removeColumn(tablaFragmentos.getColumnModel().getColumn(4));
        tablaFragmentos.removeColumn(tablaFragmentos.getColumnModel().getColumn(5));
        tablaFragmentos.removeColumn(tablaFragmentos.getColumnModel().getColumn(6));
        tablaFragmentos.removeColumn(tablaFragmentos.getColumnModel().getColumn(7));
        tablaFragmentos.removeColumn(tablaFragmentos.getColumnModel().getColumn(6));
        tablaFragmentos.removeColumn(tablaFragmentos.getColumnModel().getColumn(5));
        tablaFragmentos.removeColumn(tablaFragmentos.getColumnModel().getColumn(4));        
        tablaFragmentos.removeColumn(tablaFragmentos.getColumnModel().getColumn(3));
        tablaFragmentos.removeColumn(tablaFragmentos.getColumnModel().getColumn(1));
        tablaFragmentos.removeColumn(tablaFragmentos.getColumnModel().getColumn(1));
        tablaFragmentos.removeColumn(tablaFragmentos.getColumnModel().getColumn(1));
        tablaFragmentos.removeColumn(tablaFragmentos.getColumnModel().getColumn(1));
        
        
        tablaFragmentos.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        tablaFragmentos.getColumnModel().getColumn(0).setPreferredWidth(60);

        tablaFragmentos.getColumnModel().getColumn(1).setPreferredWidth(213);
    }
    private void Filtar() {
        DefaultTableModel model = (DefaultTableModel) tablaFragmentos.getModel();
//      DefaultTableModel tmodel =  (DefaultTableModel) tablaResultado.getColumnModel();
        DefaultTableModel newModel = new DefaultTableModel();
        if(txtBuscar.getText().length()!=0){
            TableRowSorter<DefaultTableModel> sorter = new TableRowSorter<DefaultTableModel>(model);
            tablaFragmentos.setRowSorter(sorter);

            RowFilter<DefaultTableModel,Object> filter = RowFilter.regexFilter(txtBuscar.getText(), 0);
            sorter.setRowFilter(filter);
        }
        
        
        
        tablaFragmentos.getSelectionModel().addSelectionInterval(0,0);
        Buscar();
        PasarACampos();
    }

    @Override
    public void Buscar() {
        tablaFragmentos.setSelectionBackground(Color.PINK);
        tablaFragmentos.setSelectionForeground(Color.white);
        fragmento = new FragmentoDTO();
        if(tablaFragmentos.getRowSorter()==null){
            fragmento.setId((Integer)tablaFragmentos.getModel().getValueAt(tablaFragmentos.getSelectedRow(), 0));
            fragmento.setFecha((java.util.Date) tablaFragmentos.getModel().getValueAt(tablaFragmentos.getSelectedRow(), 1));
            fragmento.setOrigen((String) tablaFragmentos.getModel().getValueAt(tablaFragmentos.getSelectedRow(), 2));
            fragmento.setForma((String) tablaFragmentos.getModel().getValueAt(tablaFragmentos.getSelectedRow(), 3));
            fragmento.setEstructura((String) tablaFragmentos.getModel().getValueAt(tablaFragmentos.getSelectedRow(), 4));
            fragmento.setPero((String) tablaFragmentos.getModel().getValueAt(tablaFragmentos.getSelectedRow(), 5));
            fragmento.setColor((String) tablaFragmentos.getModel().getValueAt(tablaFragmentos.getSelectedRow(), 6));
            fragmento.setDimencion((String) tablaFragmentos.getModel().getValueAt(tablaFragmentos.getSelectedRow(), 7));
            fragmento.setDescripcion((String) tablaFragmentos.getModel().getValueAt(tablaFragmentos.getSelectedRow(), 8));
            fragmento.setDiagnostico((String) tablaFragmentos.getModel().getValueAt(tablaFragmentos.getSelectedRow(), 9));
            fragmento.setIdFrasco((Integer) tablaFragmentos.getModel().getValueAt(tablaFragmentos.getSelectedRow(), 10));
            fragmento.setIdMedico((Integer) tablaFragmentos.getModel().getValueAt(tablaFragmentos.getSelectedRow(), 11));
            fragmento.setIdEstado((Integer) tablaFragmentos.getModel().getValueAt(tablaFragmentos.getSelectedRow(), 12));
            fragmento.setIdTipo((Integer) tablaFragmentos.getModel().getValueAt(tablaFragmentos.getSelectedRow(), 13));
            fragmento.setIsActivo((boolean) tablaFragmentos.getModel().getValueAt(tablaFragmentos.getSelectedRow(), 15));
        
        }else{
            int valor = tablaFragmentos.convertRowIndexToModel(tablaFragmentos.getSelectedRow());
            fragmento.setId((Integer)tablaFragmentos.getModel().getValueAt(valor, 0));
            fragmento.setFecha((java.util.Date) tablaFragmentos.getModel().getValueAt(valor, 1));
            fragmento.setOrigen((String) tablaFragmentos.getModel().getValueAt(valor, 2));
            fragmento.setForma((String) tablaFragmentos.getModel().getValueAt(valor, 3));
            fragmento.setEstructura((String) tablaFragmentos.getModel().getValueAt(valor, 4));
            fragmento.setPero((String) tablaFragmentos.getModel().getValueAt(valor, 5));
            fragmento.setColor((String) tablaFragmentos.getModel().getValueAt(valor, 6));
            fragmento.setDimencion((String) tablaFragmentos.getModel().getValueAt(valor, 7));
            fragmento.setDescripcion((String) tablaFragmentos.getModel().getValueAt(valor, 8));
            fragmento.setDiagnostico((String) tablaFragmentos.getModel().getValueAt(valor, 9));
            fragmento.setIdFrasco((Integer) tablaFragmentos.getModel().getValueAt(valor, 10));
            fragmento.setIdMedico((Integer) tablaFragmentos.getModel().getValueAt(valor, 11));
            fragmento.setIdEstado((Integer) tablaFragmentos.getModel().getValueAt(valor, 12));
            fragmento.setIdTipo((Integer) tablaFragmentos.getModel().getValueAt(valor, 13));
            fragmento.setIsActivo((boolean) tablaFragmentos.getModel().getValueAt(valor, 15));
        
        }
        //PasarACampos();
    }
    @Override
    public void PasarACampos() {
        String nombrePatologo;
        Fragmento fragmetoJPA = entityManager.find(Fragmento.class, fragmento.getId());
        
        lblNombreARS.setText("#"+Integer.toString(fragmetoJPA.getIdfragmento()));
        lblTipo.setText(fragmetoJPA.getIdtipoFragmentoTipoFragmento().getNombre());
        lblEstado.setText(fragmetoJPA.getIdestadoFragmentoEstadoFragmento().getNombre());
        btnPaciente.setText(fragmetoJPA.getIdfrascoFrasco().getIdpacientePaciente().getNombre());
        btnMedico.setText(fragmetoJPA.getIdmedicoMedico().getNombre());
        try{
            nombrePatologo = fragmetoJPA.getEstudio().getIdpatologoPatologo().getNombre();
            btnPatologo.setEnabled(true);
        }catch(NullPointerException e){
            nombrePatologo = "PATOLOGO NO ASIGNADO";
            btnPatologo.setEnabled(false);
        }
        
        btnPatologo.setText(nombrePatologo);
        mantenimientoAsociado.Show((Object)fragmento);
    }

    /**
     * @return the fragmentoSelected
     */
    public Fragmento getFragmentoSelected() {
        return fragmentoSelected;
    }

    /**
     * @param fragmentoSelected the fragmentoSelected to set
     */
    public void setFragmentoSelected(Fragmento fragmentoSelected) {
//        this.fragmentoSelected = fragmentoSelected;
        TableModel dtm = tablaFragmentos.getModel();
        this.fragmentoSelected = fragmentoSelected;
        for (int i=0; i<dtm.getRowCount(); i++) {
            int id = (int) dtm.getValueAt(i, 0);
            if(id == fragmentoSelected.getIdfragmento()){
                this.fragmentoSelected = fragmentoSelected;
                tablaFragmentos.getSelectionModel().clearSelection();
                tablaFragmentos.getSelectionModel().addSelectionInterval(i,i);
                Buscar();
                PasarACampos();
            }
        }
    }
}
